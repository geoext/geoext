Ext.data.JsonP.Ext_data_NodeInterface({"tagname":"class","name":"Ext.data.NodeInterface","autodetected":{"aliases":true,"alternateClassNames":true,"extends":true,"mixins":true,"requires":true,"uses":true,"members":true,"code_type":true},"files":[{"filename":"NodeInterface.js","href":"NodeInterface.html#Ext-data-NodeInterface"}],"aliases":{},"alternateClassNames":[],"extends":"Ext.Base","mixins":[],"requires":["Ext.data.field.Boolean","Ext.data.field.Integer","Ext.data.field.String","Ext.data.writer.Json","Ext.mixin.Observable"],"uses":[],"members":[{"name":"allowDrag","tagname":"cfg","owner":"Ext.data.NodeInterface","id":"cfg-allowDrag","meta":{}},{"name":"allowDrop","tagname":"cfg","owner":"Ext.data.NodeInterface","id":"cfg-allowDrop","meta":{}},{"name":"checked","tagname":"cfg","owner":"Ext.data.NodeInterface","id":"cfg-checked","meta":{}},{"name":"children","tagname":"cfg","owner":"Ext.data.NodeInterface","id":"cfg-children","meta":{}},{"name":"cls","tagname":"cfg","owner":"Ext.data.NodeInterface","id":"cfg-cls","meta":{}},{"name":"depth","tagname":"cfg","owner":"Ext.data.NodeInterface","id":"cfg-depth","meta":{"private":true}},{"name":"expandable","tagname":"cfg","owner":"Ext.data.NodeInterface","id":"cfg-expandable","meta":{}},{"name":"expanded","tagname":"cfg","owner":"Ext.data.NodeInterface","id":"cfg-expanded","meta":{}},{"name":"glyph","tagname":"cfg","owner":"Ext.data.NodeInterface","id":"cfg-glyph","meta":{}},{"name":"href","tagname":"cfg","owner":"Ext.data.NodeInterface","id":"cfg-href","meta":{}},{"name":"hrefTarget","tagname":"cfg","owner":"Ext.data.NodeInterface","id":"cfg-hrefTarget","meta":{}},{"name":"icon","tagname":"cfg","owner":"Ext.data.NodeInterface","id":"cfg-icon","meta":{}},{"name":"iconCls","tagname":"cfg","owner":"Ext.data.NodeInterface","id":"cfg-iconCls","meta":{}},{"name":"index","tagname":"cfg","owner":"Ext.data.NodeInterface","id":"cfg-index","meta":{"private":true}},{"name":"isFirst","tagname":"cfg","owner":"Ext.data.NodeInterface","id":"cfg-isFirst","meta":{"private":true}},{"name":"isLast","tagname":"cfg","owner":"Ext.data.NodeInterface","id":"cfg-isLast","meta":{"private":true}},{"name":"leaf","tagname":"cfg","owner":"Ext.data.NodeInterface","id":"cfg-leaf","meta":{}},{"name":"loaded","tagname":"cfg","owner":"Ext.data.NodeInterface","id":"cfg-loaded","meta":{"private":true}},{"name":"loading","tagname":"cfg","owner":"Ext.data.NodeInterface","id":"cfg-loading","meta":{"private":true}},{"name":"parentId","tagname":"cfg","owner":"Ext.data.NodeInterface","id":"cfg-parentId","meta":{"private":true}},{"name":"qshowDelay","tagname":"cfg","owner":"Ext.data.NodeInterface","id":"cfg-qshowDelay","meta":{}},{"name":"qtip","tagname":"cfg","owner":"Ext.data.NodeInterface","id":"cfg-qtip","meta":{}},{"name":"qtitle","tagname":"cfg","owner":"Ext.data.NodeInterface","id":"cfg-qtitle","meta":{}},{"name":"root","tagname":"cfg","owner":"Ext.data.NodeInterface","id":"cfg-root","meta":{"private":true}},{"name":"text","tagname":"cfg","owner":"Ext.data.NodeInterface","id":"cfg-text","meta":{}},{"name":"$className","tagname":"property","owner":"Ext.Base","id":"property-S-className","meta":{"private":true}},{"name":"$configPrefixed","tagname":"property","owner":"Ext.Base","id":"property-S-configPrefixed","meta":{"private":true}},{"name":"$configStrict","tagname":"property","owner":"Ext.Base","id":"property-S-configStrict","meta":{"private":true}},{"name":"childNodes","tagname":"property","owner":"Ext.data.NodeInterface","id":"property-childNodes","meta":{}},{"name":"clearPropertiesOnDestroy","tagname":"property","owner":"Ext.Base","id":"property-clearPropertiesOnDestroy","meta":{"protected":true}},{"name":"clearPrototypeOnDestroy","tagname":"property","owner":"Ext.Base","id":"property-clearPrototypeOnDestroy","meta":{"private":true}},{"name":"destroyed","tagname":"property","owner":"Ext.Base","id":"property-destroyed","meta":{"protected":true}},{"name":"firstChild","tagname":"property","owner":"Ext.data.NodeInterface","id":"property-firstChild","meta":{}},{"name":"isConfiguring","tagname":"property","owner":"Ext.Base","id":"property-isConfiguring","meta":{"protected":true,"readonly":true}},{"name":"isFirstInstance","tagname":"property","owner":"Ext.Base","id":"property-isFirstInstance","meta":{"protected":true,"readonly":true}},{"name":"isInstance","tagname":"property","owner":"Ext.Base","id":"property-isInstance","meta":{"protected":true,"readonly":true}},{"name":"isNode","tagname":"property","owner":"Ext.data.NodeInterface","id":"property-isNode","meta":{}},{"name":"lastChild","tagname":"property","owner":"Ext.data.NodeInterface","id":"property-lastChild","meta":{}},{"name":"nextSibling","tagname":"property","owner":"Ext.data.NodeInterface","id":"property-nextSibling","meta":{}},{"name":"parentNode","tagname":"property","owner":"Ext.data.NodeInterface","id":"property-parentNode","meta":{}},{"name":"previousSibling","tagname":"property","owner":"Ext.data.NodeInterface","id":"property-previousSibling","meta":{}},{"name":"self","tagname":"property","owner":"Ext.Base","id":"property-self","meta":{"protected":true}},{"name":"$onExtended","tagname":"property","owner":"Ext.Base","id":"static-property-S-onExtended","meta":{"private":true,"static":true}},{"name":"addDeprecations","tagname":"method","owner":"Ext.Base","id":"method-addDeprecations","meta":{"private":true}},{"name":"appendChild","tagname":"method","owner":"Ext.data.NodeInterface","id":"method-appendChild","meta":{}},{"name":"bubble","tagname":"method","owner":"Ext.data.NodeInterface","id":"method-bubble","meta":{}},{"name":"callOverridden","tagname":"method","owner":"Ext.Base","id":"method-callOverridden","meta":{"deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a> instead.</p>\n"},"protected":true}},{"name":"callParent","tagname":"method","owner":"Ext.Base","id":"method-callParent","meta":{"protected":true}},{"name":"callSuper","tagname":"method","owner":"Ext.Base","id":"method-callSuper","meta":{"protected":true}},{"name":"cascade","tagname":"method","owner":"Ext.data.NodeInterface","id":"method-cascade","meta":{}},{"name":"clear","tagname":"method","owner":"Ext.data.NodeInterface","id":"method-clear","meta":{"private":true}},{"name":"collapse","tagname":"method","owner":"Ext.data.NodeInterface","id":"method-collapse","meta":{}},{"name":"collapseChildren","tagname":"method","owner":"Ext.data.NodeInterface","id":"method-collapseChildren","meta":{}},{"name":"contains","tagname":"method","owner":"Ext.data.NodeInterface","id":"method-contains","meta":{}},{"name":"copy","tagname":"method","owner":"Ext.data.NodeInterface","id":"method-copy","meta":{}},{"name":"createNode","tagname":"method","owner":"Ext.data.NodeInterface","id":"method-createNode","meta":{}},{"name":"destroy","tagname":"method","owner":"Ext.Base","id":"method-destroy","meta":{}},{"name":"eachChild","tagname":"method","owner":"Ext.data.NodeInterface","id":"method-eachChild","meta":{}},{"name":"erase","tagname":"method","owner":"Ext.data.NodeInterface","id":"method-erase","meta":{}},{"name":"expand","tagname":"method","owner":"Ext.data.NodeInterface","id":"method-expand","meta":{}},{"name":"expandChildren","tagname":"method","owner":"Ext.data.NodeInterface","id":"method-expandChildren","meta":{}},{"name":"findChild","tagname":"method","owner":"Ext.data.NodeInterface","id":"method-findChild","meta":{}},{"name":"findChildBy","tagname":"method","owner":"Ext.data.NodeInterface","id":"method-findChildBy","meta":{}},{"name":"fireEvent","tagname":"method","owner":"Ext.data.NodeInterface","id":"method-fireEvent","meta":{}},{"name":"getChildAt","tagname":"method","owner":"Ext.data.NodeInterface","id":"method-getChildAt","meta":{}},{"name":"getConfig","tagname":"method","owner":"Ext.Base","id":"method-getConfig","meta":{}},{"name":"getCurrentConfig","tagname":"method","owner":"Ext.Base","id":"method-getCurrentConfig","meta":{"private":true}},{"name":"getDepth","tagname":"method","owner":"Ext.data.NodeInterface","id":"method-getDepth","meta":{}},{"name":"getInitialConfig","tagname":"method","owner":"Ext.Base","id":"method-getInitialConfig","meta":{}},{"name":"getOwnerTree","tagname":"method","owner":"Ext.data.NodeInterface","id":"method-getOwnerTree","meta":{"deprecated":{"text":"\n","version":"6.2.0"}}},{"name":"getPath","tagname":"method","owner":"Ext.data.NodeInterface","id":"method-getPath","meta":{}},{"name":"getTreeStore","tagname":"method","owner":"Ext.data.NodeInterface","id":"method-getTreeStore","meta":{}},{"name":"hasChildNodes","tagname":"method","owner":"Ext.data.NodeInterface","id":"method-hasChildNodes","meta":{}},{"name":"hasConfig","tagname":"method","owner":"Ext.Base","id":"method-hasConfig","meta":{"private":true}},{"name":"indexOf","tagname":"method","owner":"Ext.data.NodeInterface","id":"method-indexOf","meta":{}},{"name":"indexOfId","tagname":"method","owner":"Ext.data.NodeInterface","id":"method-indexOfId","meta":{}},{"name":"initConfig","tagname":"method","owner":"Ext.Base","id":"method-initConfig","meta":{"chainable":true,"protected":true}},{"name":"insertBefore","tagname":"method","owner":"Ext.data.NodeInterface","id":"method-insertBefore","meta":{}},{"name":"insertChild","tagname":"method","owner":"Ext.data.NodeInterface","id":"method-insertChild","meta":{}},{"name":"isAncestor","tagname":"method","owner":"Ext.data.NodeInterface","id":"method-isAncestor","meta":{}},{"name":"isBranchLoaded","tagname":"method","owner":"Ext.data.NodeInterface","id":"method-isBranchLoaded","meta":{}},{"name":"isExpandable","tagname":"method","owner":"Ext.data.NodeInterface","id":"method-isExpandable","meta":{}},{"name":"isExpanded","tagname":"method","owner":"Ext.data.NodeInterface","id":"method-isExpanded","meta":{}},{"name":"isFirst","tagname":"method","owner":"Ext.data.NodeInterface","id":"method-isFirst","meta":{}},{"name":"isLast","tagname":"method","owner":"Ext.data.NodeInterface","id":"method-isLast","meta":{}},{"name":"isLastVisible","tagname":"method","owner":"Ext.data.NodeInterface","id":"method-isLastVisible","meta":{"private":true}},{"name":"isLeaf","tagname":"method","owner":"Ext.data.NodeInterface","id":"method-isLeaf","meta":{}},{"name":"isLoaded","tagname":"method","owner":"Ext.data.NodeInterface","id":"method-isLoaded","meta":{}},{"name":"isLoading","tagname":"method","owner":"Ext.data.NodeInterface","id":"method-isLoading","meta":{}},{"name":"isRoot","tagname":"method","owner":"Ext.data.NodeInterface","id":"method-isRoot","meta":{}},{"name":"isVisible","tagname":"method","owner":"Ext.data.NodeInterface","id":"method-isVisible","meta":{}},{"name":"link","tagname":"method","owner":"Ext.Base","id":"method-link","meta":{"private":true}},{"name":"onChildNodesAvailable","tagname":"method","owner":"Ext.data.NodeInterface","id":"method-onChildNodesAvailable","meta":{"private":true}},{"name":"onRegisterTreeNode","tagname":"method","owner":"Ext.data.NodeInterface","id":"method-onRegisterTreeNode","meta":{"template":true}},{"name":"onUnregisterTreeNode","tagname":"method","owner":"Ext.data.NodeInterface","id":"method-onUnregisterTreeNode","meta":{"template":true}},{"name":"remove","tagname":"method","owner":"Ext.data.NodeInterface","id":"method-remove","meta":{"chainable":true}},{"name":"removeAll","tagname":"method","owner":"Ext.data.NodeInterface","id":"method-removeAll","meta":{"chainable":true}},{"name":"removeChild","tagname":"method","owner":"Ext.data.NodeInterface","id":"method-removeChild","meta":{}},{"name":"replaceChild","tagname":"method","owner":"Ext.data.NodeInterface","id":"method-replaceChild","meta":{}},{"name":"serialize","tagname":"method","owner":"Ext.data.NodeInterface","id":"method-serialize","meta":{}},{"name":"setCollapsed","tagname":"method","owner":"Ext.data.NodeInterface","id":"method-setCollapsed","meta":{"private":true}},{"name":"setConfig","tagname":"method","owner":"Ext.Base","id":"method-setConfig","meta":{"chainable":true}},{"name":"setFirstChild","tagname":"method","owner":"Ext.data.NodeInterface","id":"method-setFirstChild","meta":{"private":true}},{"name":"setLastChild","tagname":"method","owner":"Ext.data.NodeInterface","id":"method-setLastChild","meta":{"private":true}},{"name":"sort","tagname":"method","owner":"Ext.data.NodeInterface","id":"method-sort","meta":{}},{"name":"statics","tagname":"method","owner":"Ext.Base","id":"method-statics","meta":{"protected":true}},{"name":"unlink","tagname":"method","owner":"Ext.Base","id":"method-unlink","meta":{"chainable":true,"private":true}},{"name":"updateInfo","tagname":"method","owner":"Ext.data.NodeInterface","id":"method-updateInfo","meta":{"protected":true}},{"name":"addConfig","tagname":"method","owner":"Ext.Base","id":"static-method-addConfig","meta":{"private":true,"static":true}},{"name":"addInheritableStatics","tagname":"method","owner":"Ext.Base","id":"static-method-addInheritableStatics","meta":{"private":true,"static":true}},{"name":"addMember","tagname":"method","owner":"Ext.Base","id":"static-method-addMember","meta":{"chainable":true,"private":true,"static":true}},{"name":"addMembers","tagname":"method","owner":"Ext.Base","id":"static-method-addMembers","meta":{"chainable":true,"static":true}},{"name":"addStatics","tagname":"method","owner":"Ext.Base","id":"static-method-addStatics","meta":{"chainable":true,"static":true}},{"name":"borrow","tagname":"method","owner":"Ext.Base","id":"static-method-borrow","meta":{"private":true,"static":true}},{"name":"callParent","tagname":"method","owner":"Ext.Base","id":"static-method-callParent","meta":{"protected":true,"static":true}},{"name":"callSuper","tagname":"method","owner":"Ext.Base","id":"static-method-callSuper","meta":{"protected":true,"static":true}},{"name":"create","tagname":"method","owner":"Ext.Base","id":"static-method-create","meta":{"static":true}},{"name":"createAlias","tagname":"method","owner":"Ext.Base","id":"static-method-createAlias","meta":{"static":true}},{"name":"decorate","tagname":"method","owner":"Ext.data.NodeInterface","id":"static-method-decorate","meta":{"static":true}},{"name":"extend","tagname":"method","owner":"Ext.Base","id":"static-method-extend","meta":{"private":true,"static":true}},{"name":"getConfigurator","tagname":"method","owner":"Ext.Base","id":"static-method-getConfigurator","meta":{"private":true,"static":true}},{"name":"getName","tagname":"method","owner":"Ext.Base","id":"static-method-getName","meta":{"static":true}},{"name":"getPrototypeBody","tagname":"method","owner":"Ext.data.NodeInterface","id":"static-method-getPrototypeBody","meta":{"private":true,"static":true}},{"name":"mixin","tagname":"method","owner":"Ext.Base","id":"static-method-mixin","meta":{"private":true,"static":true}},{"name":"onExtended","tagname":"method","owner":"Ext.Base","id":"static-method-onExtended","meta":{"chainable":true,"private":true,"static":true}},{"name":"override","tagname":"method","owner":"Ext.Base","id":"static-method-override","meta":{"static":true}},{"name":"triggerExtended","tagname":"method","owner":"Ext.Base","id":"static-method-triggerExtended","meta":{"private":true,"static":true}},{"name":"append","tagname":"event","owner":"Ext.data.NodeInterface","id":"event-append","meta":{}},{"name":"beforeappend","tagname":"event","owner":"Ext.data.NodeInterface","id":"event-beforeappend","meta":{}},{"name":"beforecollapse","tagname":"event","owner":"Ext.data.NodeInterface","id":"event-beforecollapse","meta":{}},{"name":"beforeexpand","tagname":"event","owner":"Ext.data.NodeInterface","id":"event-beforeexpand","meta":{}},{"name":"beforeinsert","tagname":"event","owner":"Ext.data.NodeInterface","id":"event-beforeinsert","meta":{}},{"name":"beforemove","tagname":"event","owner":"Ext.data.NodeInterface","id":"event-beforemove","meta":{}},{"name":"beforeremove","tagname":"event","owner":"Ext.data.NodeInterface","id":"event-beforeremove","meta":{}},{"name":"collapse","tagname":"event","owner":"Ext.data.NodeInterface","id":"event-collapse","meta":{}},{"name":"expand","tagname":"event","owner":"Ext.data.NodeInterface","id":"event-expand","meta":{}},{"name":"insert","tagname":"event","owner":"Ext.data.NodeInterface","id":"event-insert","meta":{}},{"name":"move","tagname":"event","owner":"Ext.data.NodeInterface","id":"event-move","meta":{}},{"name":"remove","tagname":"event","owner":"Ext.data.NodeInterface","id":"event-remove","meta":{}},{"name":"sort","tagname":"event","owner":"Ext.data.NodeInterface","id":"event-sort","meta":{}}],"code_type":"ext_define","id":"class-Ext.data.NodeInterface","short_doc":"This class is used as a set of methods that are applied to the prototype of a\nModel to decorate it with a Node API. ...","component":false,"superclasses":["Ext.Base"],"subclasses":[],"mixedInto":[],"parentMixins":[],"html":"<div><pre class=\"hierarchy\"><h4>Hierarchy</h4><div class='subclass first-child'><a href='#!/api/Ext.Base' rel='Ext.Base' class='docClass'>Ext.Base</a><div class='subclass '><strong>Ext.data.NodeInterface</strong></div></div><h4>Requires</h4><div class='dependency'><a href='#!/api/Ext.data.field.Boolean' rel='Ext.data.field.Boolean' class='docClass'>Ext.data.field.Boolean</a></div><div class='dependency'><a href='#!/api/Ext.data.field.Integer' rel='Ext.data.field.Integer' class='docClass'>Ext.data.field.Integer</a></div><div class='dependency'><a href='#!/api/Ext.data.field.String' rel='Ext.data.field.String' class='docClass'>Ext.data.field.String</a></div><div class='dependency'><a href='#!/api/Ext.data.writer.Json' rel='Ext.data.writer.Json' class='docClass'>Ext.data.writer.Json</a></div><div class='dependency'><a href='#!/api/Ext.mixin.Observable' rel='Ext.mixin.Observable' class='docClass'>Ext.mixin.Observable</a></div><h4>Files</h4><div class='dependency'><a href='source/NodeInterface.html#Ext-data-NodeInterface' target='_blank'>NodeInterface.js</a></div></pre><div class='doc-contents'><p>This class is used as a set of methods that are applied to the prototype of a\n<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Model</a> to decorate it with a Node API. This means that models\nused in conjunction with a tree will have all of the tree related methods available\non the model. In general, this class will not be used directly by the developer.</p>\n\n<p>This class also creates extra <a href=\"#!/api/Ext.data.field.Field\" rel=\"Ext.data.field.Field\" class=\"docClass\">fields</a> on the model, if they do\nnot exist, to help maintain the tree state and UI. These fields are documented as\nconfig options.</p>\n\n<p>The data fields used to render a tree node are: <a href=\"#!/api/Ext.data.NodeInterface-cfg-text\" rel=\"Ext.data.NodeInterface-cfg-text\" class=\"docClass\">text</a>, <a href=\"#!/api/Ext.data.NodeInterface-cfg-leaf\" rel=\"Ext.data.NodeInterface-cfg-leaf\" class=\"docClass\">leaf</a>,\n<a href=\"#!/api/Ext.data.NodeInterface-cfg-children\" rel=\"Ext.data.NodeInterface-cfg-children\" class=\"docClass\">children</a>, and <a href=\"#!/api/Ext.data.NodeInterface-cfg-expanded\" rel=\"Ext.data.NodeInterface-cfg-expanded\" class=\"docClass\">expanded</a>.  Once a node is loaded to the tree store\nyou can use <a href=\"#!/api/Ext.data.Model-method-get\" rel=\"Ext.data.Model-method-get\" class=\"docClass\">get()</a> to fetch the value of a given field\nname (provided there is not a convenience accessor on the Node for that field).</p>\n\n<pre class='inline-example '><code><a href=\"#!/api/Ext.tip.QuickTipManager-method-init\" rel=\"Ext.tip.QuickTipManager-method-init\" class=\"docClass\">Ext.tip.QuickTipManager.init</a>(); // not required when using Ext.application()\n\nvar root = {\n    expanded: true,\n    children: [{\n        text: \"Leaf node (&lt;i&gt;no folder/arrow icon&lt;/i&gt;)\",\n        leaf: true,\n        qtitle: 'Sample Tip Title',\n        qtip: 'Tip body'\n    }, {\n        text: \"Parent node expanded\",\n        expanded: true,\n        children: [{\n            text: \"Expanded leaf node 1\",\n            leaf: true\n        }, {\n            text: \"Expanded leaf node 2\",\n            leaf: true\n        }]\n    }, {\n        text: \"Parent node collapsed\",\n        children: [{\n            text: \"Collapsed leaf node 1\",\n            leaf: true\n        }, {\n            text: \"Collapsed leaf node 2\",\n            leaf: true\n        }]\n    }]\n};\n\nvar tree = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.tree.Panel\" rel=\"Ext.tree.Panel\" class=\"docClass\">Ext.tree.Panel</a>', {\n    title: 'TreePanel',\n    width: 260,\n    height: 200,\n    root: root,\n    rootVisible: false,\n    renderTo: document.body,\n    bbar: ['The first node ', {\n        text: 'is a leaf?',\n        handler: function () {\n            var firstChild = tree.getRootNode().getChildAt(0);\n            <a href=\"#!/api/Ext.MessageBox-method-alert\" rel=\"Ext.MessageBox-method-alert\" class=\"docClass\">Ext.Msg.alert</a>('Is Leaf?', firstChild.isLeaf());\n        }\n    }, {\n        text: 'has text?',\n        handler: function () {\n            var firstChild = tree.getRootNode().getChildAt(0);\n            <a href=\"#!/api/Ext.MessageBox-method-alert\" rel=\"Ext.MessageBox-method-alert\" class=\"docClass\">Ext.Msg.alert</a>('Has Text:', firstChild.get('text'));\n        }\n    }]\n});\n</code></pre>\n\n<p>The following configs have methods used to set the value / state of the node at\nruntime:</p>\n\n<p><strong><a href=\"#!/api/Ext.data.NodeInterface-cfg-children\" rel=\"Ext.data.NodeInterface-cfg-children\" class=\"docClass\">children</a> / <a href=\"#!/api/Ext.data.NodeInterface-cfg-leaf\" rel=\"Ext.data.NodeInterface-cfg-leaf\" class=\"docClass\">leaf</a></strong></p>\n\n<ul>\n<li><a href=\"#!/api/Ext.data.NodeInterface-method-appendChild\" rel=\"Ext.data.NodeInterface-method-appendChild\" class=\"docClass\">appendChild</a></li>\n<li><a href=\"#!/api/Ext.data.NodeInterface-method-hasChildNodes\" rel=\"Ext.data.NodeInterface-method-hasChildNodes\" class=\"docClass\">hasChildNodes</a></li>\n<li><a href=\"#!/api/Ext.data.NodeInterface-method-insertBefore\" rel=\"Ext.data.NodeInterface-method-insertBefore\" class=\"docClass\">insertBefore</a></li>\n<li><a href=\"#!/api/Ext.data.NodeInterface-method-insertChild\" rel=\"Ext.data.NodeInterface-method-insertChild\" class=\"docClass\">insertChild</a></li>\n<li><a href=\"#!/api/Ext.data.NodeInterface-method-remove\" rel=\"Ext.data.NodeInterface-method-remove\" class=\"docClass\">remove</a></li>\n<li><a href=\"#!/api/Ext.data.NodeInterface-method-removeAll\" rel=\"Ext.data.NodeInterface-method-removeAll\" class=\"docClass\">removeAll</a></li>\n<li><a href=\"#!/api/Ext.data.NodeInterface-method-removeChild\" rel=\"Ext.data.NodeInterface-method-removeChild\" class=\"docClass\">removeChild</a></li>\n<li><a href=\"#!/api/Ext.data.NodeInterface-method-replaceChild\" rel=\"Ext.data.NodeInterface-method-replaceChild\" class=\"docClass\">replaceChild</a></li>\n</ul>\n\n\n<p><strong><a href=\"#!/api/Ext.data.NodeInterface-cfg-expanded\" rel=\"Ext.data.NodeInterface-cfg-expanded\" class=\"docClass\">expanded</a></strong></p>\n\n<ul>\n<li><a href=\"#!/api/Ext.data.NodeInterface-method-expand\" rel=\"Ext.data.NodeInterface-method-expand\" class=\"docClass\">expand</a></li>\n<li><a href=\"#!/api/Ext.data.NodeInterface-method-expandChildren\" rel=\"Ext.data.NodeInterface-method-expandChildren\" class=\"docClass\">expandChildren</a></li>\n<li><a href=\"#!/api/Ext.data.NodeInterface-method-collapse\" rel=\"Ext.data.NodeInterface-method-collapse\" class=\"docClass\">collapse</a></li>\n<li><a href=\"#!/api/Ext.data.NodeInterface-method-collapseChildren\" rel=\"Ext.data.NodeInterface-method-collapseChildren\" class=\"docClass\">collapseChildren</a></li>\n</ul>\n\n\n<p>The remaining configs may be set using <a href=\"#!/api/Ext.data.Model-method-set\" rel=\"Ext.data.Model-method-set\" class=\"docClass\">set()</a>.</p>\n\n<pre><code>node.set('text', 'Changed Text'); // example showing how to change the node label\n</code></pre>\n\n<p>The <a href=\"#!/api/Ext.data.NodeInterface-cfg-qtip\" rel=\"Ext.data.NodeInterface-cfg-qtip\" class=\"docClass\">qtip</a>, <a href=\"#!/api/Ext.data.NodeInterface-cfg-qtitle\" rel=\"Ext.data.NodeInterface-cfg-qtitle\" class=\"docClass\">qtitle</a>, and <a href=\"#!/api/Ext.data.NodeInterface-cfg-qshowDelay\" rel=\"Ext.data.NodeInterface-cfg-qshowDelay\" class=\"docClass\">qshowDelay</a> use QuickTips and\nrequires initializing <a href=\"#!/api/Ext.tip.QuickTipManager\" rel=\"Ext.tip.QuickTipManager\" class=\"docClass\">Ext.tip.QuickTipManager</a> unless the application is\ncreated using Ext.application.</p>\n\n<pre><code><a href=\"#!/api/Ext.tip.QuickTipManager-method-init\" rel=\"Ext.tip.QuickTipManager-method-init\" class=\"docClass\">Ext.tip.QuickTipManager.init</a>();\n</code></pre>\n\n<p>For additional information and examples see the description for\n<a href=\"#!/api/Ext.tree.Panel\" rel=\"Ext.tree.Panel\" class=\"docClass\">Ext.tree.Panel</a>.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-cfg'>Config options</h3><div class='subsection'><div id='cfg-allowDrag' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-cfg-allowDrag' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-cfg-allowDrag' class='name expandable'>allowDrag</a> : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Set to false to deny dragging of this node. ...</div><div class='long'><p>Set to false to deny dragging of this node.</p>\n\n<p>Applicable when using the <a href=\"#!/api/Ext.tree.plugin.TreeViewDragDrop\" rel=\"Ext.tree.plugin.TreeViewDragDrop\" class=\"docClass\">TreeViewDragDrop</a> plugin.</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='cfg-allowDrop' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-cfg-allowDrop' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-cfg-allowDrop' class='name expandable'>allowDrop</a> : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Set to false to deny dropping on this node. ...</div><div class='long'><p>Set to false to deny dropping on this node.</p>\n\n<p>Applicable when using the <a href=\"#!/api/Ext.tree.plugin.TreeViewDragDrop\" rel=\"Ext.tree.plugin.TreeViewDragDrop\" class=\"docClass\">TreeViewDragDrop</a> plugin.</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='cfg-checked' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-cfg-checked' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-cfg-checked' class='name expandable'>checked</a> : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Set to true or false to show a checkbox alongside this node. ...</div><div class='long'><p>Set to true or false to show a checkbox alongside this node.</p>\n\n<p>To fetch an array of checked nodes use <a href=\"#!/api/Ext.tree.Panel-method-getChecked\" rel=\"Ext.tree.Panel-method-getChecked\" class=\"docClass\">getChecked()</a>.</p>\n<p>Defaults to: <code>null</code></p></div></div></div><div id='cfg-children' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-cfg-children' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-cfg-children' class='name expandable'>children</a> : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>[]<span class=\"signature\"></span></div><div class='description'><div class='short'>Array of child nodes. ...</div><div class='long'><p>Array of child nodes.</p>\n\n<p><strong>Note:</strong> By default the child nodes root is <code>children</code>, but can be set using the\nreader <a href=\"#!/api/Ext.data.reader.Reader-cfg-rootProperty\" rel=\"Ext.data.reader.Reader-cfg-rootProperty\" class=\"docClass\">rootProperty</a> config on the\n<a href=\"#!/api/Ext.data.TreeStore\" rel=\"Ext.data.TreeStore\" class=\"docClass\">TreeStore&#39;s</a> <a href=\"#!/api/Ext.data.TreeStore-cfg-proxy\" rel=\"Ext.data.TreeStore-cfg-proxy\" class=\"docClass\">proxy</a>.</p>\n</div></div></div><div id='cfg-cls' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-cfg-cls' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-cfg-cls' class='name expandable'>cls</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'><p>CSS class to apply to this node.</p>\n</div><div class='long'><p>CSS class to apply to this node.</p>\n</div></div></div><div id='cfg-depth' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-cfg-depth' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-cfg-depth' class='name expandable'>depth</a> : Number<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>The number of parents this node has. ...</div><div class='long'><p>The number of parents this node has. A root node has depth 0, a child of it depth 1, and so on...</p>\n\n<p>See <a href=\"#!/api/Ext.data.NodeInterface-method-getDepth\" rel=\"Ext.data.NodeInterface-method-getDepth\" class=\"docClass\">getDepth</a>.</p>\n</div></div></div><div id='cfg-expandable' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-cfg-expandable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-cfg-expandable' class='name expandable'>expandable</a> : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>False to prevent expanding/collapsing of this node. ...</div><div class='long'><p>False to prevent expanding/collapsing of this node.</p>\n\n<p>See also: <a href=\"#!/api/Ext.data.NodeInterface-method-isExpandable\" rel=\"Ext.data.NodeInterface-method-isExpandable\" class=\"docClass\">isExpandable</a>.</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='cfg-expanded' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-cfg-expanded' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-cfg-expanded' class='name expandable'>expanded</a> : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>True if the node is expanded. ...</div><div class='long'><p>True if the node is expanded.</p>\n\n<p>When the tree is asynchronously remote loaded, expanding a collapsed node loads\nthe children of that node (if the node has not already been loaded previously).</p>\n\n<p>See also: <a href=\"#!/api/Ext.data.NodeInterface-method-isExpanded\" rel=\"Ext.data.NodeInterface-method-isExpanded\" class=\"docClass\">isExpanded</a>.</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='cfg-glyph' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-cfg-glyph' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-cfg-glyph' class='name expandable'>glyph</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>\n</div><div class='long'>\n        <p>Available since: <b>6.2.0</b></p>\n</div></div></div><div id='cfg-href' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-cfg-href' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-cfg-href' class='name expandable'>href</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A URL for a link that's created when this config is specified. ...</div><div class='long'><p>A URL for a link that's created when this config is specified.</p>\n\n<p>See also <a href=\"#!/api/Ext.data.NodeInterface-cfg-hrefTarget\" rel=\"Ext.data.NodeInterface-cfg-hrefTarget\" class=\"docClass\">hrefTarget</a>.</p>\n</div></div></div><div id='cfg-hrefTarget' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-cfg-hrefTarget' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-cfg-hrefTarget' class='name expandable'>hrefTarget</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Target for link. ...</div><div class='long'><p>Target for link. Only applicable when <a href=\"#!/api/Ext.data.NodeInterface-cfg-href\" rel=\"Ext.data.NodeInterface-cfg-href\" class=\"docClass\">href</a> is also specified.</p>\n</div></div></div><div id='cfg-icon' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-cfg-icon' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-cfg-icon' class='name expandable'>icon</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Path to an image to use as an icon. ...</div><div class='long'><p>Path to an image to use as an icon.</p>\n\n<p>For instructions on how you can use icon fonts including those distributed in\nthe SDK see <a href=\"#!/api/Ext.data.NodeInterface-cfg-iconCls\" rel=\"Ext.data.NodeInterface-cfg-iconCls\" class=\"docClass\">iconCls</a>.</p>\n</div></div></div><div id='cfg-iconCls' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-cfg-iconCls' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-cfg-iconCls' class='name expandable'>iconCls</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>One or more space separated CSS classes to be applied to the icon element. ...</div><div class='long'><p>One or more space separated CSS classes to be applied to the icon element.<br/>\nThe CSS rule(s) applied should specify a background image to be used as the\nicon.</p>\n\n<p>An example of specifying a custom icon class would be something like:</p>\n\n<pre><code>// specify the property in the config for the class:\niconCls: 'my-home-icon'\n\n// css rule specifying the background image to be used as the icon image:\n.my-home-icon {\n    background-image: url(../images/my-home-icon.gif) !important;\n}\n</code></pre>\n\n<p>In addition to specifying your own classes, you can use the font icons\nprovided in the SDK using the following syntax:</p>\n\n<pre><code>// using Font Awesome\niconCls: 'x-fa fa-home'\n\n// using Pictos\niconCls: 'pictos pictos-home'\n</code></pre>\n\n<p>Depending on the theme you're using, you may need include the font icon\npackages in your application in order to use the icons included in the\nSDK.  For more information see:</p>\n\n<ul>\n<li><a href=\"http://fortawesome.github.io/Font-Awesome/cheatsheet/\">Font Awesome icons</a></li>\n<li><a href=\"http://docs.sencha.com/extjs/6.0/core_concepts/font_ext.html\">Pictos icons</a></li>\n<li><a href=\"http://docs.sencha.com/extjs/6.0/core_concepts/theming.html\">Theming Guide</a></li>\n</ul>\n\n<p>Use <a href=\"#!/api/Ext.data.NodeInterface-cfg-icon\" rel=\"Ext.data.NodeInterface-cfg-icon\" class=\"docClass\">icon</a> to set the icon src path directly.</p>\n</div></div></div><div id='cfg-index' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-cfg-index' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-cfg-index' class='name expandable'>index</a> : Number<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>The position of the node inside its parent. ...</div><div class='long'><p>The position of the node inside its parent. When parent has 4 children and the node is third amongst them,\nindex will be 2.</p>\n\n<p>See <a href=\"#!/api/Ext.data.NodeInterface-method-indexOf\" rel=\"Ext.data.NodeInterface-method-indexOf\" class=\"docClass\">indexOf</a> and <a href=\"#!/api/Ext.data.NodeInterface-method-indexOfId\" rel=\"Ext.data.NodeInterface-method-indexOfId\" class=\"docClass\">indexOfId</a>.</p>\n</div></div></div><div id='cfg-isFirst' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-cfg-isFirst' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-cfg-isFirst' class='name expandable'>isFirst</a> : Boolean<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>True if this is the first node. ...</div><div class='long'><p>True if this is the first node.</p>\n\n<p>See <a href=\"#!/api/Ext.data.NodeInterface-method-isFirst\" rel=\"Ext.data.NodeInterface-method-isFirst\" class=\"docClass\">isFirst</a>.</p>\n</div></div></div><div id='cfg-isLast' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-cfg-isLast' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-cfg-isLast' class='name expandable'>isLast</a> : Boolean<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>True if this is the last node. ...</div><div class='long'><p>True if this is the last node.</p>\n\n<p>See <a href=\"#!/api/Ext.data.NodeInterface-method-isLast\" rel=\"Ext.data.NodeInterface-method-isLast\" class=\"docClass\">isLast</a>.</p>\n</div></div></div><div id='cfg-leaf' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-cfg-leaf' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-cfg-leaf' class='name expandable'>leaf</a> : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Set to true to indicate that this child can have no children. ...</div><div class='long'><p>Set to true to indicate that this child can have no children. The expand icon/arrow will then not be\nrendered for this node.</p>\n\n<p>See also: <a href=\"#!/api/Ext.data.NodeInterface-method-isLeaf\" rel=\"Ext.data.NodeInterface-method-isLeaf\" class=\"docClass\">isLeaf</a>.</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='cfg-loaded' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-cfg-loaded' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-cfg-loaded' class='name expandable'>loaded</a> : Boolean<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>True if the node has finished loading. ...</div><div class='long'><p>True if the node has finished loading.</p>\n\n<p>See <a href=\"#!/api/Ext.data.NodeInterface-method-isLoaded\" rel=\"Ext.data.NodeInterface-method-isLoaded\" class=\"docClass\">isLoaded</a>.</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='cfg-loading' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-cfg-loading' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-cfg-loading' class='name expandable'>loading</a> : Boolean<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>True if the node is currently loading. ...</div><div class='long'><p>True if the node is currently loading.</p>\n\n<p>See <a href=\"#!/api/Ext.data.NodeInterface-method-isLoading\" rel=\"Ext.data.NodeInterface-method-isLoading\" class=\"docClass\">isLoading</a>.</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='cfg-parentId' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-cfg-parentId' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-cfg-parentId' class='name expandable'>parentId</a> : String<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>ID of parent node. ...</div><div class='long'><p>ID of parent node.</p>\n\n<p>See <a href=\"#!/api/Ext.data.NodeInterface-property-parentNode\" rel=\"Ext.data.NodeInterface-property-parentNode\" class=\"docClass\">parentNode</a>.</p>\n</div></div></div><div id='cfg-qshowDelay' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-cfg-qshowDelay' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-cfg-qshowDelay' class='name expandable'>qshowDelay</a> : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Tooltip showDelay. ...</div><div class='long'><p>Tooltip showDelay.</p>\n\n<p>See also <a href=\"#!/api/Ext.data.NodeInterface-cfg-qtip\" rel=\"Ext.data.NodeInterface-cfg-qtip\" class=\"docClass\">qtip</a>.\nSee also <a href=\"#!/api/Ext.data.NodeInterface-cfg-qtitle\" rel=\"Ext.data.NodeInterface-cfg-qtitle\" class=\"docClass\">qtitle</a>.</p>\n</div></div></div><div id='cfg-qtip' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-cfg-qtip' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-cfg-qtip' class='name expandable'>qtip</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Tooltip text to show on this node. ...</div><div class='long'><p>Tooltip text to show on this node.</p>\n\n<p>See also <a href=\"#!/api/Ext.data.NodeInterface-cfg-qtitle\" rel=\"Ext.data.NodeInterface-cfg-qtitle\" class=\"docClass\">qtitle</a>.\nSee also <a href=\"#!/api/Ext.data.NodeInterface-cfg-qshowDelay\" rel=\"Ext.data.NodeInterface-cfg-qshowDelay\" class=\"docClass\">qshowDelay</a>.</p>\n</div></div></div><div id='cfg-qtitle' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-cfg-qtitle' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-cfg-qtitle' class='name expandable'>qtitle</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Tooltip title. ...</div><div class='long'><p>Tooltip title.</p>\n\n<p>See also <a href=\"#!/api/Ext.data.NodeInterface-cfg-qtip\" rel=\"Ext.data.NodeInterface-cfg-qtip\" class=\"docClass\">qtip</a>.\nSee also <a href=\"#!/api/Ext.data.NodeInterface-cfg-qshowDelay\" rel=\"Ext.data.NodeInterface-cfg-qshowDelay\" class=\"docClass\">qshowDelay</a>.</p>\n</div></div></div><div id='cfg-root' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-cfg-root' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-cfg-root' class='name expandable'>root</a> : Boolean<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>True if this is the root node. ...</div><div class='long'><p>True if this is the root node.</p>\n\n<p>See <a href=\"#!/api/Ext.data.NodeInterface-method-isRoot\" rel=\"Ext.data.NodeInterface-method-isRoot\" class=\"docClass\">isRoot</a>.</p>\n</div></div></div><div id='cfg-text' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-cfg-text' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-cfg-text' class='name expandable'>text</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>The text to show on node label (html tags are accepted). ...</div><div class='long'><p>The text to show on node label (<em>html tags are accepted</em>).\nThe default text for the root node is <code>ROOT</code>.  All other nodes default to ''.</p>\n\n<p><strong>Note:</strong> By default the node label is <code>text</code>, but can be set using the tree's\n<a href=\"#!/api/Ext.tree.Panel-cfg-displayField\" rel=\"Ext.tree.Panel-cfg-displayField\" class=\"docClass\">displayField</a> config.</p>\n</div></div></div></div></div><div class='members-section'><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Instance properties</h3><div id='property-S-className' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-property-S-className' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-property-S-className' class='name expandable'>$className</a> : String<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>&#39;Ext.Base&#39;</code></p></div></div></div><div id='property-S-configPrefixed' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-property-S-configPrefixed' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-property-S-configPrefixed' class='name expandable'>$configPrefixed</a> : Boolean<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>The value true causes config values to be stored on instances using a\nproperty name prefixed with an underscore (\"_\")...</div><div class='long'><p>The value <code>true</code> causes <code>config</code> values to be stored on instances using a\nproperty name prefixed with an underscore (\"_\") character. A value of <code>false</code>\nstores <code>config</code> values as properties using their exact name (no prefix).</p>\n<p>Defaults to: <code>true</code></p>        <p>Available since: <b>5.0.0</b></p>\n<p>Overrides: <a href=\"#!/api/Ext.data.AbstractStore-property-S-configPrefixed\" rel=\"Ext.data.AbstractStore-property-S-configPrefixed\" class=\"docClass\">Ext.data.AbstractStore.$configPrefixed</a>, <a href=\"#!/api/Ext.Component-property-S-configPrefixed\" rel=\"Ext.Component-property-S-configPrefixed\" class=\"docClass\">Ext.Component.$configPrefixed</a>, <a href=\"#!/api/Ext.layout.Layout-property-S-configPrefixed\" rel=\"Ext.layout.Layout-property-S-configPrefixed\" class=\"docClass\">Ext.layout.Layout.$configPrefixed</a>, <a href=\"#!/api/Ext.selection.Model-property-S-configPrefixed\" rel=\"Ext.selection.Model-property-S-configPrefixed\" class=\"docClass\">Ext.selection.Model.$configPrefixed</a>, <a href=\"#!/api/Ext.layout.container.boxOverflow.None-property-S-configPrefixed\" rel=\"Ext.layout.container.boxOverflow.None-property-S-configPrefixed\" class=\"docClass\">Ext.layout.container.boxOverflow.None.$configPrefixed</a></p></div></div></div><div id='property-S-configStrict' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-property-S-configStrict' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-property-S-configStrict' class='name expandable'>$configStrict</a> : Boolean<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>The value true instructs the initConfig method to only honor values for\nproperties declared in the config block of a ...</div><div class='long'><p>The value <code>true</code> instructs the <code>initConfig</code> method to only honor values for\nproperties declared in the <code>config</code> block of a class. When <code>false</code>, properties\nthat are not declared in a <code>config</code> block will be placed on the instance.</p>\n<p>Defaults to: <code>true</code></p>        <p>Available since: <b>5.0.0</b></p>\n<p>Overrides: <a href=\"#!/api/Ext.data.AbstractStore-property-S-configStrict\" rel=\"Ext.data.AbstractStore-property-S-configStrict\" class=\"docClass\">Ext.data.AbstractStore.$configStrict</a>, <a href=\"#!/api/Ext.Component-property-S-configStrict\" rel=\"Ext.Component-property-S-configStrict\" class=\"docClass\">Ext.Component.$configStrict</a>, <a href=\"#!/api/Ext.layout.Layout-property-S-configStrict\" rel=\"Ext.layout.Layout-property-S-configStrict\" class=\"docClass\">Ext.layout.Layout.$configStrict</a>, <a href=\"#!/api/Ext.selection.Model-property-S-configStrict\" rel=\"Ext.selection.Model-property-S-configStrict\" class=\"docClass\">Ext.selection.Model.$configStrict</a>, <a href=\"#!/api/Ext.layout.container.boxOverflow.None-property-S-configStrict\" rel=\"Ext.layout.container.boxOverflow.None-property-S-configStrict\" class=\"docClass\">Ext.layout.container.boxOverflow.None.$configStrict</a></p></div></div></div><div id='property-childNodes' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-property-childNodes' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-property-childNodes' class='name expandable'>childNodes</a> : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>[]<span class=\"signature\"></span></div><div class='description'><div class='short'>An array of this nodes children. ...</div><div class='long'><p>An array of this nodes children.  Array will be empty if this node has no children.</p>\n</div></div></div><div id='property-clearPropertiesOnDestroy' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-property-clearPropertiesOnDestroy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-property-clearPropertiesOnDestroy' class='name expandable'>clearPropertiesOnDestroy</a> : Boolean/\"async\"<span class=\"signature\"><span class='protected' >protected</span></span></div><div class='description'><div class='short'>Setting this property to false will prevent nulling object references\non a Class instance after destruction. ...</div><div class='long'><p>Setting this property to <code>false</code> will prevent nulling object references\non a Class instance after destruction. Setting this to <code>\"async\"</code> will delay\nthe clearing for approx 50ms.</p>\n<p>Defaults to: <code>true</code></p>        <p>Available since: <b>6.2.0</b></p>\n<p>Overrides: <a href=\"#!/api/Ext.Component-property-clearPropertiesOnDestroy\" rel=\"Ext.Component-property-clearPropertiesOnDestroy\" class=\"docClass\">Ext.Component.clearPropertiesOnDestroy</a>, <a href=\"#!/api/Ext.Widget-property-clearPropertiesOnDestroy\" rel=\"Ext.Widget-property-clearPropertiesOnDestroy\" class=\"docClass\">Ext.Widget.clearPropertiesOnDestroy</a></p></div></div></div><div id='property-clearPrototypeOnDestroy' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-property-clearPrototypeOnDestroy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-property-clearPrototypeOnDestroy' class='name expandable'>clearPrototypeOnDestroy</a> : Boolean<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>Setting this property to true will result in setting the object's\nprototype to null after the destruction sequence is...</div><div class='long'><p>Setting this property to <code>true</code> will result in setting the object's\nprototype to <code>null</code> after the destruction sequence is fully completed.\nAfter that, most attempts at calling methods on the object instance\nwill result in \"method not defined\" exception. This can be very helpful\nwith tracking down otherwise hard to find bugs like runaway Ajax requests,\ntimed functions not cleared on destruction, etc.</p>\n\n<p>Note that this option can only work in browsers that support <code>Object.setPrototypeOf</code>\nmethod, and is only available in debugging mode.</p>\n<p>Defaults to: <code>false</code></p>        <p>Available since: <b>6.2.0</b></p>\n</div></div></div><div id='property-destroyed' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-property-destroyed' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-property-destroyed' class='name expandable'>destroyed</a> : Boolean<span class=\"signature\"><span class='protected' >protected</span></span></div><div class='description'><div class='short'>This property is set to true after the destroy method is called. ...</div><div class='long'><p>This property is set to <code>true</code> after the <code>destroy</code> method is called.</p>\n<p>Defaults to: <code>false</code></p></div></div></div><div id='property-firstChild' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-property-firstChild' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-property-firstChild' class='name expandable'>firstChild</a> : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a><span class=\"signature\"></span></div><div class='description'><div class='short'>A reference to this node's first child node. ...</div><div class='long'><p>A reference to this node's first child node. <code>null</code> if this node has no children.</p>\n</div></div></div><div id='property-isConfiguring' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-property-isConfiguring' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-property-isConfiguring' class='name expandable'>isConfiguring</a> : Boolean<span class=\"signature\"><span class='protected' >protected</span><span class='readonly' >readonly</span></span></div><div class='description'><div class='short'>This property is set to true during the call to initConfig. ...</div><div class='long'><p>This property is set to <code>true</code> during the call to <code>initConfig</code>.</p>\n<p>Defaults to: <code>false</code></p>        <p>Available since: <b>5.0.0</b></p>\n</div></div></div><div id='property-isFirstInstance' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-property-isFirstInstance' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-property-isFirstInstance' class='name expandable'>isFirstInstance</a> : Boolean<span class=\"signature\"><span class='protected' >protected</span><span class='readonly' >readonly</span></span></div><div class='description'><div class='short'>This property is set to true if this instance is the first of its class. ...</div><div class='long'><p>This property is set to <code>true</code> if this instance is the first of its class.</p>\n<p>Defaults to: <code>false</code></p>        <p>Available since: <b>5.0.0</b></p>\n</div></div></div><div id='property-isInstance' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-property-isInstance' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-property-isInstance' class='name expandable'>isInstance</a> : Boolean<span class=\"signature\"><span class='protected' >protected</span><span class='readonly' >readonly</span></span></div><div class='description'><div class='short'>This value is true and is used to identify plain objects from instances of\na defined class. ...</div><div class='long'><p>This value is <code>true</code> and is used to identify plain objects from instances of\na defined class.</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='property-isNode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-property-isNode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-property-isNode' class='name expandable'>isNode</a> : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>true in this class to identify an object as an instantiated Node, or subclass thereof. ...</div><div class='long'><p><code>true</code> in this class to identify an object as an instantiated Node, or subclass thereof.</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='property-lastChild' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-property-lastChild' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-property-lastChild' class='name expandable'>lastChild</a> : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a><span class=\"signature\"></span></div><div class='description'><div class='short'>A reference to this node's last child node. ...</div><div class='long'><p>A reference to this node's last child node. <code>null</code> if this node has no children.</p>\n</div></div></div><div id='property-nextSibling' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-property-nextSibling' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-property-nextSibling' class='name expandable'>nextSibling</a> : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a><span class=\"signature\"></span></div><div class='description'><div class='short'>A reference to this node's next sibling node. ...</div><div class='long'><p>A reference to this node's next sibling node. <code>null</code> if this node does not have a next sibling.</p>\n</div></div></div><div id='property-parentNode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-property-parentNode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-property-parentNode' class='name expandable'>parentNode</a> : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a><span class=\"signature\"></span></div><div class='description'><div class='short'>A reference to this node's parent node. ...</div><div class='long'><p>A reference to this node's parent node. <code>null</code> if this node is the root node.</p>\n</div></div></div><div id='property-previousSibling' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-property-previousSibling' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-property-previousSibling' class='name expandable'>previousSibling</a> : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a><span class=\"signature\"></span></div><div class='description'><div class='short'>A reference to this node's previous sibling node. ...</div><div class='long'><p>A reference to this node's previous sibling node. <code>null</code> if this node does not have a previous sibling.</p>\n</div></div></div><div id='property-self' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-property-self' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-property-self' class='name expandable'>self</a> : <a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a><span class=\"signature\"><span class='protected' >protected</span></span></div><div class='description'><div class='short'>Get the reference to the current class from which this object was instantiated. ...</div><div class='long'><p>Get the reference to the current class from which this object was instantiated. Unlike <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>,\n<code>this.self</code> is scope-dependent and it's meant to be used for dynamic inheritance. See <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>\nfor a detailed comparison</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        alert(this.self.speciesName); // dependent on 'this'\n    },\n\n    clone: function() {\n        return new this.self();\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n    statics: {\n        speciesName: 'Snow Leopard'         // My.SnowLeopard.speciesName = 'Snow Leopard'\n    }\n});\n\nvar cat = new My.Cat();                     // alerts 'Cat'\nvar snowLeopard = new My.SnowLeopard();     // alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));             // alerts 'My.SnowLeopard'\n</code></pre>\n</div></div></div></div><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Static properties</h3><div id='static-property-S-onExtended' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-static-property-S-onExtended' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-property-S-onExtended' class='name expandable'>$onExtended</a> : Array<span class=\"signature\"><span class='private' >private</span><span class='static' >static</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>[]</code></p></div></div></div></div></div><div class='members-section'><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Instance methods</h3><div id='method-addDeprecations' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-method-addDeprecations' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-addDeprecations' class='name expandable'>addDeprecations</a>( <span class='pre'>deprecations</span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>This method applies a versioned, deprecation declaration to this class. ...</div><div class='long'><p>This method applies a versioned, deprecation declaration to this class. This\nis typically called by the <code>deprecated</code> config.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>deprecations</span> : Object<div class='sub-desc'></div></li></ul></div></div></div><div id='method-appendChild' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-method-appendChild' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-method-appendChild' class='name expandable'>appendChild</a>( <span class='pre'>node, [suppressEvents], [commit]</span> ) : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Inserts node(s) as the last child node of this node. ...</div><div class='long'><p>Inserts node(s) as the last child node of this node.</p>\n\n<p>If the node was previously a child node of another parent node, it will be removed from that node first.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>node</span> : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>/<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>[]/Object<div class='sub-desc'><p>The node or Array of nodes to append</p>\n</div></li><li><span class='pre'>suppressEvents</span> : Boolean (optional)<div class='sub-desc'><p>True to suppress firing of\nevents.</p>\n<p>Defaults to: <code>false</code></p></div></li><li><span class='pre'>commit</span> : Boolean (optional)<div class='sub-desc'>\n<p>Defaults to: <code>false</code></p></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a></span><div class='sub-desc'><p>The appended node if single append, or null if an array was passed</p>\n</div></li></ul></div></div></div><div id='method-bubble' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-method-bubble' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-method-bubble' class='name expandable'>bubble</a>( <span class='pre'>fn, [scope], [args]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Bubbles up the tree from this node, calling the specified function with each node. ...</div><div class='long'><p>Bubbles up the tree from this node, calling the specified function with each node. The arguments to the function\nwill be the args provided or the current node. If the function returns false at any point,\nthe bubble is stopped.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fn</span> : Function<div class='sub-desc'><p>The function to call</p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>The scope (this reference) in which the function is executed. Defaults to the current Node.</p>\n</div></li><li><span class='pre'>args</span> : Array (optional)<div class='sub-desc'><p>The args to call the function with. Defaults to passing the current Node.</p>\n</div></li></ul></div></div></div><div id='method-callOverridden' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-method-callOverridden' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-callOverridden' class='name expandable'>callOverridden</a>( <span class='pre'>args</span> ) : Object<span class=\"signature\"><span class='deprecated' >deprecated</span><span class='protected' >protected</span></span></div><div class='description'><div class='short'>Call the original method that was previously overridden with override\n\nExt.define('My.Cat', {\n    constructor: functi...</div><div class='long'><p>Call the original method that was previously overridden with <a href=\"#!/api/Ext.Base-static-method-override\" rel=\"Ext.Base-static-method-override\" class=\"docClass\">override</a></p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callOverridden();\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprected</strong> </p>\n        <p>Use <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a> instead.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>args</span> : Array/Arguments<div class='sub-desc'><p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callOverridden(arguments)</code></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>Returns the result of calling the overridden method</p>\n</div></li></ul></div></div></div><div id='method-callParent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-method-callParent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-callParent' class='name expandable'>callParent</a>( <span class='pre'>args</span> ) : Object<span class=\"signature\"><span class='protected' >protected</span></span></div><div class='description'><div class='short'>Call the \"parent\" method of the current method. ...</div><div class='long'><p>Call the \"parent\" method of the current method. That is the method previously\noverridden by derivation or by an override (see <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>).</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Base', {\n     constructor: function (x) {\n         this.x = x;\n     },\n\n     statics: {\n         method: function (x) {\n             return x;\n         }\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived', {\n     extend: 'My.Base',\n\n     constructor: function () {\n         this.callParent([21]);\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // alerts 21\n</code></pre>\n\n<p>This can be used with an override as follows:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.DerivedOverride', {\n     override: 'My.Derived',\n\n     constructor: function (x) {\n         this.callParent([x*2]); // calls original My.Derived constructor\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // now alerts 42\n</code></pre>\n\n<p>This also works with static and private methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2', {\n     extend: 'My.Base',\n\n     // privates: {\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Base.method\n         }\n     }\n });\n\n alert(My.Base.method(10));     // alerts 10\n alert(My.Derived2.method(10)); // alerts 20\n</code></pre>\n\n<p>Lastly, it also works with overridden static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2Override', {\n     override: 'My.Derived2',\n\n     // privates: {\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Derived2.method\n         }\n     }\n });\n\n alert(My.Derived2.method(10); // now alerts 40\n</code></pre>\n\n<p>To override a method and replace it and also call the superclass method, use\n<a href=\"#!/api/Ext.Base-method-callSuper\" rel=\"Ext.Base-method-callSuper\" class=\"docClass\">callSuper</a>. This is often done to patch a method to fix a bug.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>args</span> : Array/Arguments<div class='sub-desc'><p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callParent(arguments)</code></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>Returns the result of calling the parent method</p>\n</div></li></ul></div></div></div><div id='method-callSuper' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-method-callSuper' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-callSuper' class='name expandable'>callSuper</a>( <span class='pre'>args</span> ) : Object<span class=\"signature\"><span class='protected' >protected</span></span></div><div class='description'><div class='short'>This method is used by an override to call the superclass method but\nbypass any overridden method. ...</div><div class='long'><p>This method is used by an <strong>override</strong> to call the superclass method but\nbypass any overridden method. This is often done to \"patch\" a method that\ncontains a bug but for whatever reason cannot be fixed directly.</p>\n\n<p>Consider:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.Class', {\n     method: function () {\n         console.log('Good');\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.DerivedClass', {\n     extend: 'Ext.some.Class',\n\n     method: function () {\n         console.log('Bad');\n\n         // ... logic but with a bug ...\n\n         this.callParent();\n     }\n });\n</code></pre>\n\n<p>To patch the bug in <code>Ext.some.DerivedClass.method</code>, the typical solution is to create an\noverride:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('App.patches.DerivedClass', {\n     override: 'Ext.some.DerivedClass',\n\n     method: function () {\n         console.log('Fixed');\n\n         // ... logic but with bug fixed ...\n\n         this.callSuper();\n     }\n });\n</code></pre>\n\n<p>The patch method cannot use <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a> to call the superclass\n<code>method</code> since that would call the overridden method containing the bug. In\nother words, the above patch would only produce \"Fixed\" then \"Good\" in the\nconsole log, whereas, using <code>callParent</code> would produce \"Fixed\" then \"Bad\"\nthen \"Good\".</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>args</span> : Array/Arguments<div class='sub-desc'><p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callSuper(arguments)</code></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>Returns the result of calling the superclass method</p>\n</div></li></ul></div></div></div><div id='method-cascade' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-method-cascade' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-method-cascade' class='name expandable'>cascade</a>( <span class='pre'>spec</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Cascades down the tree from this node, calling the specified functions with each node. ...</div><div class='long'><p>Cascades down the tree from this node, calling the specified functions with each node. The arguments to the function\nwill be the args provided or the current node. If the <code>before</code> function returns false at any point,\nthe cascade is stopped on that branch.</p>\n\n<p>Note that the 3 argument form passing <code>fn, scope, args</code> is still supported. The <code>fn</code> function is as before, called\n<em>before</em> cascading down into child nodes. If it returns <code>false</code>, the child nodes are not traversed.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>spec</span> : Object<div class='sub-desc'><p>An object containing before and after functions, scope and an argument list.</p>\n<ul><li><span class='pre'>before</span> : Function (optional)<div class='sub-desc'><p>A function to call on a node <em>before</em> cascading down into child nodes.\nIf it returns <code>false</code>, the child nodes are not traversed.</p>\n</div></li><li><span class='pre'>after</span> : Function (optional)<div class='sub-desc'><p>A function to call on a node <em>after</em> cascading down into child nodes.</p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>The scope (this reference) in which the functions are executed. Defaults to the current Node.</p>\n</div></li><li><span class='pre'>args</span> : Array (optional)<div class='sub-desc'><p>The args to call the function with. Defaults to passing the current Node.</p>\n</div></li></ul></div></li></ul></div></div></div><div id='method-clear' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-method-clear' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-method-clear' class='name expandable'>clear</a>( <span class='pre'>[erase], [resetChildren]</span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>Clears the node. ...</div><div class='long'><p>Clears the node.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>erase</span> : Boolean (optional)<div class='sub-desc'><p>True to erase the node using the configured\nproxy.</p>\n<p>Defaults to: <code>false</code></p></div></li><li><span class='pre'>resetChildren</span> : Boolean (optional)<div class='sub-desc'><p>True to reset child nodes</p>\n<p>Defaults to: <code>false</code></p></div></li></ul></div></div></div><div id='method-collapse' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-method-collapse' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-method-collapse' class='name expandable'>collapse</a>( <span class='pre'>[recursive], [callback], [scope]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Collapse this node. ...</div><div class='long'><p>Collapse this node.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>recursive</span> : Boolean (optional)<div class='sub-desc'><p>True to recursively collapse all the children</p>\n<p>Defaults to: <code>false</code></p></div></li><li><span class='pre'>callback</span> : Function (optional)<div class='sub-desc'><p>The function to execute once the collapse completes</p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>The scope to run the callback in</p>\n</div></li></ul></div></div></div><div id='method-collapseChildren' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-method-collapseChildren' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-method-collapseChildren' class='name expandable'>collapseChildren</a>( <span class='pre'>[recursive], [callback], [scope]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Collapse all the children of this node. ...</div><div class='long'><p>Collapse all the children of this node.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>recursive</span> : Function (optional)<div class='sub-desc'><p>True to recursively collapse all the children</p>\n<p>Defaults to: <code>false</code></p></div></li><li><span class='pre'>callback</span> : Function (optional)<div class='sub-desc'><p>The function to execute once all the children are collapsed</p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>The scope to run the callback in</p>\n</div></li></ul></div></div></div><div id='method-contains' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-method-contains' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-method-contains' class='name expandable'>contains</a>( <span class='pre'>node</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns true if this node is an ancestor (at any point) of the passed node. ...</div><div class='long'><p>Returns true if this node is an ancestor (at any point) of the passed node.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>node</span> : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a><div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-copy' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-method-copy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-method-copy' class='name expandable'>copy</a>( <span class='pre'>[id], [session], [deep]</span> ) : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Creates a copy (clone) of this Node. ...</div><div class='long'><p>Creates a copy (clone) of this Node.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>id</span> : String (optional)<div class='sub-desc'><p>A new id, defaults to this Node's id.</p>\n</div></li><li><span class='pre'>session</span> : Ext.data.session.Session (optional)<div class='sub-desc'><p>The session to which the new record belongs.</p>\n</div></li><li><span class='pre'>deep</span> : Boolean (optional)<div class='sub-desc'><p>True to recursively copy all child Nodes into the new Node.\nFalse to copy without child Nodes.</p>\n<p>Defaults to: <code>false</code></p></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a></span><div class='sub-desc'><p>A copy of this Node.</p>\n</div></li></ul></div></div></div><div id='method-createNode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-method-createNode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-method-createNode' class='name expandable'>createNode</a>( <span class='pre'>node</span> ) : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Ensures that the passed object is an instance of a Record with the NodeInterface applied ...</div><div class='long'><p>Ensures that the passed object is an instance of a Record with the NodeInterface applied</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>node</span> : Object<div class='sub-desc'></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-destroy' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-method-destroy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-destroy' class='name expandable'>destroy</a>( <span class='pre'></span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>This method is called to cleanup an object and its resources. ...</div><div class='long'><p>This method is called to cleanup an object and its resources. After calling\nthis method, the object should not be used any further in any way, including\naccess to its methods and properties.</p>\n\n<p>To prevent potential memory leaks, all object references will be nulled\nat the end of destruction sequence, unless <a href=\"#!/api/Ext.Base-property-clearPropertiesOnDestroy\" rel=\"Ext.Base-property-clearPropertiesOnDestroy\" class=\"docClass\">clearPropertiesOnDestroy</a>\nis set to <code>false</code>.</p>\n<p>Overrides: <a href=\"#!/api/Ext.mixin.Observable-method-destroy\" rel=\"Ext.mixin.Observable-method-destroy\" class=\"docClass\">Ext.mixin.Observable.destroy</a>, <a href=\"#!/api/Ext.data.AbstractStore-method-destroy\" rel=\"Ext.data.AbstractStore-method-destroy\" class=\"docClass\">Ext.data.AbstractStore.destroy</a>, <a href=\"#!/api/GeoExt.data.store.OlObjects-method-destroy\" rel=\"GeoExt.data.store.OlObjects-method-destroy\" class=\"docClass\">GeoExt.data.store.OlObjects.destroy</a>, <a href=\"#!/api/Ext.util.ElementContainer-method-destroy\" rel=\"Ext.util.ElementContainer-method-destroy\" class=\"docClass\">Ext.util.ElementContainer.destroy</a>, <a href=\"#!/api/Ext.state.Stateful-method-destroy\" rel=\"Ext.state.Stateful-method-destroy\" class=\"docClass\">Ext.state.Stateful.destroy</a>, <a href=\"#!/api/Ext.util.AbstractMixedCollection-method-destroy\" rel=\"Ext.util.AbstractMixedCollection-method-destroy\" class=\"docClass\">Ext.util.AbstractMixedCollection.destroy</a>, <a href=\"#!/api/Ext.Component-method-destroy\" rel=\"Ext.Component-method-destroy\" class=\"docClass\">Ext.Component.destroy</a>, <a href=\"#!/api/GeoExt.data.store.Features-method-destroy\" rel=\"GeoExt.data.store.Features-method-destroy\" class=\"docClass\">GeoExt.data.store.Features.destroy</a>, <a href=\"#!/api/Ext.selection.DataViewModel-method-destroy\" rel=\"Ext.selection.DataViewModel-method-destroy\" class=\"docClass\">Ext.selection.DataViewModel.destroy</a>, <a href=\"#!/api/Ext.Widget-method-destroy\" rel=\"Ext.Widget-method-destroy\" class=\"docClass\">Ext.Widget.destroy</a>, <a href=\"#!/api/Ext.app.BaseController-method-destroy\" rel=\"Ext.app.BaseController-method-destroy\" class=\"docClass\">Ext.app.BaseController.destroy</a>, <a href=\"#!/api/Ext.plugin.Abstract-method-destroy\" rel=\"Ext.plugin.Abstract-method-destroy\" class=\"docClass\">Ext.plugin.Abstract.destroy</a></p></div></div></div><div id='method-eachChild' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-method-eachChild' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-method-eachChild' class='name expandable'>eachChild</a>( <span class='pre'>fn, [scope], [args]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Iterates the child nodes of this node, calling the specified function\nwith each node. ...</div><div class='long'><p>Iterates the child nodes of this node, calling the specified function\nwith each node. The arguments to the function will be the args\nprovided or the current node. If the function returns false at any\npoint, the iteration stops.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fn</span> : Function<div class='sub-desc'><p>The function to call</p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>The scope (<em>this</em> reference) in which the\nfunction is executed. Defaults to the Node on which eachChild is\ncalled.</p>\n</div></li><li><span class='pre'>args</span> : Array (optional)<div class='sub-desc'><p>The args to call the function with. Defaults to\npassing the current Node.</p>\n</div></li></ul></div></div></div><div id='method-erase' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-method-erase' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-method-erase' class='name expandable'>erase</a>( <span class='pre'>options</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Destroys the node. ...</div><div class='long'><p>Destroys the node.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>options</span> : Object<div class='sub-desc'></div></li></ul></div></div></div><div id='method-expand' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-method-expand' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-method-expand' class='name expandable'>expand</a>( <span class='pre'>[recursive], [callback], [scope]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Expand this node. ...</div><div class='long'><p>Expand this node.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>recursive</span> : Boolean (optional)<div class='sub-desc'><p>True to recursively expand all the children</p>\n<p>Defaults to: <code>false</code></p></div></li><li><span class='pre'>callback</span> : Function (optional)<div class='sub-desc'><p>The function to execute once the expand completes</p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>The scope to run the callback in</p>\n</div></li></ul></div></div></div><div id='method-expandChildren' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-method-expandChildren' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-method-expandChildren' class='name expandable'>expandChildren</a>( <span class='pre'>[recursive], [callback], [scope]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Expand all the children of this node. ...</div><div class='long'><p>Expand all the children of this node.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>recursive</span> : Boolean (optional)<div class='sub-desc'><p>True to recursively expand all the children</p>\n<p>Defaults to: <code>false</code></p></div></li><li><span class='pre'>callback</span> : Function (optional)<div class='sub-desc'><p>The function to execute once all the children are expanded</p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>The scope to run the callback in</p>\n</div></li></ul></div></div></div><div id='method-findChild' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-method-findChild' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-method-findChild' class='name expandable'>findChild</a>( <span class='pre'>attribute, value, [deep]</span> ) : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Finds the first child that has the attribute with the specified value. ...</div><div class='long'><p>Finds the first child that has the attribute with the specified value.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>attribute</span> : String<div class='sub-desc'><p>The attribute name</p>\n</div></li><li><span class='pre'>value</span> : Object<div class='sub-desc'><p>The value to search for</p>\n</div></li><li><span class='pre'>deep</span> : Boolean (optional)<div class='sub-desc'><p>True to search through nodes deeper than the immediate children</p>\n<p>Defaults to: <code>false</code></p></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a></span><div class='sub-desc'><p>The found child or null if none was found</p>\n</div></li></ul></div></div></div><div id='method-findChildBy' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-method-findChildBy' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-method-findChildBy' class='name expandable'>findChildBy</a>( <span class='pre'>fn, [scope], [deep]</span> ) : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Finds the first child by a custom function. ...</div><div class='long'><p>Finds the first child by a custom function. The child matches if the function passed returns true.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fn</span> : Function<div class='sub-desc'><p>A function which must return true if the passed Node is the required Node.</p>\n</div></li><li><span class='pre'>scope</span> : Object (optional)<div class='sub-desc'><p>The scope (this reference) in which the function is executed. Defaults to the Node being tested.</p>\n</div></li><li><span class='pre'>deep</span> : Boolean (optional)<div class='sub-desc'><p>True to search through nodes deeper than the immediate children</p>\n<p>Defaults to: <code>false</code></p></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a></span><div class='sub-desc'><p>The found child or null if none was found</p>\n</div></li></ul></div></div></div><div id='method-fireEvent' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-method-fireEvent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-method-fireEvent' class='name expandable'>fireEvent</a>( <span class='pre'>eventName, args</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Fires the specified event with the passed parameters (minus the event name, plus the options object passed\nto addList...</div><div class='long'><p>Fires the specified event with the passed parameters (minus the event name, plus the <code>options</code> object passed\nto <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a>).</p>\n\n<p>An event may be set to bubble up an Observable parent hierarchy (See <a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>) by\ncalling <a href=\"#!/api/Ext.mixin.Observable-method-enableBubble\" rel=\"Ext.mixin.Observable-method-enableBubble\" class=\"docClass\">enableBubble</a>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>eventName</span> : String<div class='sub-desc'><p>The name of the event to fire.</p>\n</div></li><li><span class='pre'>args</span> : Object...<div class='sub-desc'><p>Variable number of parameters are passed to handlers.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p>returns false if any of the handlers return false otherwise it returns true.</p>\n</div></li></ul></div></div></div><div id='method-getChildAt' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-method-getChildAt' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-method-getChildAt' class='name expandable'>getChildAt</a>( <span class='pre'>index</span> ) : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the child node at the specified index. ...</div><div class='long'><p>Returns the child node at the specified index.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>index</span> : Number<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getConfig' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-method-getConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-getConfig' class='name expandable'>getConfig</a>( <span class='pre'>[name], [peek]</span> ) : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a specified config property value. ...</div><div class='long'><p>Returns a specified config property value. If the name parameter is not passed,\nall current configuration options will be returned as key value pairs.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String (optional)<div class='sub-desc'><p>The name of the config property to get.</p>\n</div></li><li><span class='pre'>peek</span> : Boolean (optional)<div class='sub-desc'><p><code>true</code> to peek at the raw value without calling the getter.</p>\n<p>Defaults to: <code>false</code></p></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>The config property value.</p>\n</div></li></ul></div></div></div><div id='method-getCurrentConfig' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-method-getCurrentConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-getCurrentConfig' class='name expandable'>getCurrentConfig</a>( <span class='pre'></span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-getDepth' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-method-getDepth' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-method-getDepth' class='name expandable'>getDepth</a>( <span class='pre'></span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns depth of this node (the root node has a depth of 0) ...</div><div class='long'><p>Returns depth of this node (the root node has a depth of 0)</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getInitialConfig' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-method-getInitialConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-getInitialConfig' class='name expandable'>getInitialConfig</a>( <span class='pre'>[name]</span> ) : Object/Mixed<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the initial configuration passed to the constructor when\ninstantiating this class. ...</div><div class='long'><p>Returns the initial configuration passed to the constructor when\ninstantiating this class.</p>\n\n<p>Given this example <a href=\"#!/api/Ext.button.Button\" rel=\"Ext.button.Button\" class=\"docClass\">Ext.button.Button</a> definition and instance:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('MyApp.view.Button', {\n    extend: '<a href=\"#!/api/Ext.button.Button\" rel=\"Ext.button.Button\" class=\"docClass\">Ext.button.Button</a>',\n    xtype: 'mybutton',\n\n    scale: 'large',\n    enableToggle: true\n});\n\nvar btn = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>({\n    xtype: 'mybutton',\n    renderTo: <a href=\"#!/api/Ext-method-getBody\" rel=\"Ext-method-getBody\" class=\"docClass\">Ext.getBody</a>(),\n    text: 'Test Button'\n});\n</code></pre>\n\n<p>Calling <code>btn.getInitialConfig()</code> would return an object including the config\noptions passed to the <code>create</code> method:</p>\n\n<pre><code>xtype: 'mybutton',\nrenderTo: // The document body itself\ntext: 'Test Button'\n</code></pre>\n\n<p>Calling <code>btn.getInitialConfig('text')</code>returns <strong>'Test Button'</strong>.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String (optional)<div class='sub-desc'><p>Name of the config option to return.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object/Mixed</span><div class='sub-desc'><p>The full config object or a single config value\nwhen <code>name</code> parameter specified.</p>\n</div></li></ul></div></div></div><div id='method-getOwnerTree' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-method-getOwnerTree' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-method-getOwnerTree' class='name expandable'>getOwnerTree</a>( <span class='pre'></span> ) : <a href=\"#!/api/Ext.tree.Panel\" rel=\"Ext.tree.Panel\" class=\"docClass\">Ext.tree.Panel</a><span class=\"signature\"><span class='deprecated' >deprecated</span></span></div><div class='description'><div class='short'>Returns the tree this node is in. ...</div><div class='long'><p>Returns the tree this node is in.</p>\n        <div class='rounded-box deprecated-box deprecated-tag-box'>\n        <p>This method has been <strong>deprected</strong> since 6.2.0</p>\n        \n\n        </div>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.tree.Panel\" rel=\"Ext.tree.Panel\" class=\"docClass\">Ext.tree.Panel</a></span><div class='sub-desc'><p>The tree panel which owns this node.</p>\n</div></li></ul></div></div></div><div id='method-getPath' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-method-getPath' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-method-getPath' class='name expandable'>getPath</a>( <span class='pre'>[field], [separator]</span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Gets the hierarchical path from the root of the current node. ...</div><div class='long'><p>Gets the hierarchical path from the root of the current node.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>field</span> : String (optional)<div class='sub-desc'><p>The field to construct the path from. Defaults to the model idProperty.</p>\n</div></li><li><span class='pre'>separator</span> : String (optional)<div class='sub-desc'><p>A separator to use.</p>\n<p>Defaults to: <code>&#39;/&#39;</code></p></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>The node path</p>\n</div></li></ul></div></div></div><div id='method-getTreeStore' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-method-getTreeStore' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-method-getTreeStore' class='name expandable'>getTreeStore</a>( <span class='pre'></span> ) : <a href=\"#!/api/Ext.data.TreeStore\" rel=\"Ext.data.TreeStore\" class=\"docClass\">Ext.data.TreeStore</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the Ext.data.TreeStore which owns this node. ...</div><div class='long'><p>Returns the <a href=\"#!/api/Ext.data.TreeStore\" rel=\"Ext.data.TreeStore\" class=\"docClass\">Ext.data.TreeStore</a> which owns this node.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.data.TreeStore\" rel=\"Ext.data.TreeStore\" class=\"docClass\">Ext.data.TreeStore</a></span><div class='sub-desc'><p>The TreeStore which owns this node.</p>\n</div></li></ul></div></div></div><div id='method-hasChildNodes' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-method-hasChildNodes' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-method-hasChildNodes' class='name expandable'>hasChildNodes</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns true if this node has one or more child nodes, else false. ...</div><div class='long'><p>Returns true if this node has one or more child nodes, else false.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-hasConfig' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-method-hasConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-hasConfig' class='name expandable'>hasConfig</a>( <span class='pre'>config</span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-indexOf' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-method-indexOf' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-method-indexOf' class='name expandable'>indexOf</a>( <span class='pre'>node</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the index of a child node ...</div><div class='long'><p>Returns the index of a child node</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>node</span> : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a><div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The index of the node or -1 if it was not found</p>\n</div></li></ul></div></div></div><div id='method-indexOfId' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-method-indexOfId' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-method-indexOfId' class='name expandable'>indexOfId</a>( <span class='pre'>id</span> ) : Number<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns the index of a child node that matches the id ...</div><div class='long'><p>Returns the index of a child node that matches the id</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>id</span> : String<div class='sub-desc'><p>The id of the node to find</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p>The index of the node or -1 if it was not found</p>\n</div></li></ul></div></div></div><div id='method-initConfig' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-method-initConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-initConfig' class='name expandable'>initConfig</a>( <span class='pre'>config</span> ) : <a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a><span class=\"signature\"><span class='chainable' >chainable</span><span class='protected' >protected</span></span></div><div class='description'><div class='short'>Initialize configuration for this class. ...</div><div class='long'><p>Initialize configuration for this class. a typical example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Class', {\n    // The default config\n    config: {\n        name: 'Awesome',\n        isAwesome: true\n    },\n\n    constructor: function(config) {\n        this.initConfig(config);\n    }\n});\n\nvar awesome = new My.awesome.Class({\n    name: 'Super Awesome'\n});\n\nalert(awesome.getName()); // 'Super Awesome'\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : Object<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-insertBefore' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-method-insertBefore' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-method-insertBefore' class='name expandable'>insertBefore</a>( <span class='pre'>node, refNode</span> ) : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Inserts the first node before the second node in this nodes childNodes collection. ...</div><div class='long'><p>Inserts the first node before the second node in this nodes childNodes collection.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>node</span> : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>/<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>[]/Object<div class='sub-desc'><p>The node to insert</p>\n</div></li><li><span class='pre'>refNode</span> : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a><div class='sub-desc'><p>The node to insert before (if null the node is appended)</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a></span><div class='sub-desc'><p>The inserted node</p>\n</div></li></ul></div></div></div><div id='method-insertChild' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-method-insertChild' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-method-insertChild' class='name expandable'>insertChild</a>( <span class='pre'>index, node</span> ) : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Inserts a node into this node. ...</div><div class='long'><p>Inserts a node into this node.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>index</span> : Number<div class='sub-desc'><p>The zero-based index to insert the node at</p>\n</div></li><li><span class='pre'>node</span> : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>/Object<div class='sub-desc'><p>The node to insert</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a></span><div class='sub-desc'><p>The node you just inserted</p>\n</div></li></ul></div></div></div><div id='method-isAncestor' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-method-isAncestor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-method-isAncestor' class='name expandable'>isAncestor</a>( <span class='pre'>node</span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns true if the passed node is an ancestor (at any point) of this node. ...</div><div class='long'><p>Returns true if the passed node is an ancestor (at any point) of this node.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>node</span> : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a><div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isBranchLoaded' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-method-isBranchLoaded' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-method-isBranchLoaded' class='name expandable'>isBranchLoaded</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns true if this node is a branch node, and the entire branch is fully loaded. ...</div><div class='long'><p>Returns true if this node is a branch node, and the entire branch is fully loaded.</p>\n\n<p>Using this method, it is possible to ascertain whether an\n<code>expandAll()</code> call (<em>classic toolkit TreePanel method</em>) will have\naccess to all descendant nodes without incurring a store load.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isExpandable' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-method-isExpandable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-method-isExpandable' class='name expandable'>isExpandable</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns true if this node has one or more child nodes, or if the expandable\nnode attribute is explicitly specified as...</div><div class='long'><p>Returns true if this node has one or more child nodes, or if the <tt>expandable</tt>\nnode attribute is explicitly specified as true, otherwise returns false.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isExpanded' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-method-isExpanded' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-method-isExpanded' class='name expandable'>isExpanded</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns true if this node is expanded. ...</div><div class='long'><p>Returns <code>true</code> if this node is expanded.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isFirst' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-method-isFirst' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-method-isFirst' class='name expandable'>isFirst</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns true if this node is the first child of its parent ...</div><div class='long'><p>Returns true if this node is the first child of its parent</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isLast' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-method-isLast' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-method-isLast' class='name expandable'>isLast</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns true if this node is the last child of its parent ...</div><div class='long'><p>Returns true if this node is the last child of its parent</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isLastVisible' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-method-isLastVisible' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-method-isLastVisible' class='name expandable'>isLastVisible</a>( <span class='pre'></span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>Used by Ext.tree.Column.initTemplateRendererData to determine whether a node is the last visible\nsibling. ...</div><div class='long'><p>Used by <a href=\"#!/api/Ext.tree.Column-method-initTemplateRendererData\" rel=\"Ext.tree.Column-method-initTemplateRendererData\" class=\"docClass\">Ext.tree.Column.initTemplateRendererData</a> to determine whether a node is the last <em>visible</em>\nsibling.</p>\n</div></div></div><div id='method-isLeaf' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-method-isLeaf' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-method-isLeaf' class='name expandable'>isLeaf</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns true if this node is a leaf ...</div><div class='long'><p>Returns true if this node is a leaf</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isLoaded' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-method-isLoaded' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-method-isLoaded' class='name expandable'>isLoaded</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns true if this node is loaded ...</div><div class='long'><p>Returns true if this node is loaded</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isLoading' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-method-isLoading' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-method-isLoading' class='name expandable'>isLoading</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns true if this node is loading ...</div><div class='long'><p>Returns true if this node is loading</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isRoot' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-method-isRoot' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-method-isRoot' class='name expandable'>isRoot</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns true if this node is the root node ...</div><div class='long'><p>Returns true if this node is the root node</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isVisible' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-method-isVisible' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-method-isVisible' class='name expandable'>isVisible</a>( <span class='pre'></span> ) : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns true if this node is visible. ...</div><div class='long'><p>Returns true if this node is visible. Note that visibility refers to\nthe structure of the tree, the <a href=\"#!/api/Ext.tree.Panel-cfg-rootVisible\" rel=\"Ext.tree.Panel-cfg-rootVisible\" class=\"docClass\">Ext.tree.Panel.rootVisible</a>\nconfiguration is not taken into account here. If this method is called\non the root node, it will always be visible.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-link' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-method-link' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-link' class='name expandable'>link</a>( <span class='pre'>name, value</span> ) : Object<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>Adds a \"destroyable\" object to an internal list of objects that will be destroyed\nwhen this instance is destroyed (vi...</div><div class='long'><p>Adds a \"destroyable\" object to an internal list of objects that will be destroyed\nwhen this instance is destroyed (via <code><a href=\"#!/api/Ext.Base-method-destroy\" rel=\"Ext.Base-method-destroy\" class=\"docClass\">destroy</a></code>).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'>\n</div></li><li><span class='pre'>value</span> : Object<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>The <code>value</code> passed.</p>\n\n</div></li></ul></div></div></div><div id='method-onChildNodesAvailable' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-method-onChildNodesAvailable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-method-onChildNodesAvailable' class='name expandable'>onChildNodesAvailable</a>( <span class='pre'>records, recursive, callback, scope</span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>Called as a callback from the Ext.data.TreeStore.onBeforeNodeExpand when the child nodes needed by expand have been l...</div><div class='long'><p>Called as a callback from the <a href=\"#!/api/Ext.data.TreeStore-method-onBeforeNodeExpand\" rel=\"Ext.data.TreeStore-method-onBeforeNodeExpand\" class=\"docClass\">Ext.data.TreeStore.onBeforeNodeExpand</a> when the child nodes needed by <a href=\"#!/api/Ext.data.NodeInterface-method-expand\" rel=\"Ext.data.NodeInterface-method-expand\" class=\"docClass\">expand</a> have been loaded and appended.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>records</span> : Object<div class='sub-desc'></div></li><li><span class='pre'>recursive</span> : Object<div class='sub-desc'></div></li><li><span class='pre'>callback</span> : Object<div class='sub-desc'></div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'></div></li></ul></div></div></div><div id='method-onRegisterTreeNode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-method-onRegisterTreeNode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-method-onRegisterTreeNode' class='name expandable'>onRegisterTreeNode</a>( <span class='pre'>treeStore</span> )<span class=\"signature\"><span class='template' >template</span></span></div><div class='description'><div class='short'>Implement this method in a tree record subclass if it needs to track whenever it is registered\nwith a TreeStore. ...</div><div class='long'><p>Implement this method in a tree record subclass if it needs to track whenever it is registered\nwith a <a href=\"#!/api/Ext.data.TreeStore\" rel=\"Ext.data.TreeStore\" class=\"docClass\">TreeStore</a>.</p>\n      <div class='rounded-box template-box'>\n      <p>This is a <a href=\"#!/guide/components\">template method</a>.\n         a hook into the functionality of this class.\n         Feel free to override it in child classes.</p>\n      </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>treeStore</span> : <a href=\"#!/api/Ext.data.TreeStore\" rel=\"Ext.data.TreeStore\" class=\"docClass\">Ext.data.TreeStore</a><div class='sub-desc'><p>The TreeStore to which the node is being registered.</p>\n</div></li></ul></div></div></div><div id='method-onUnregisterTreeNode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-method-onUnregisterTreeNode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-method-onUnregisterTreeNode' class='name expandable'>onUnregisterTreeNode</a>( <span class='pre'>treeStore</span> )<span class=\"signature\"><span class='template' >template</span></span></div><div class='description'><div class='short'>Implement this method in a tree record subclass if it needs to track whenever it is unregistered\nfrom a TreeStore. ...</div><div class='long'><p>Implement this method in a tree record subclass if it needs to track whenever it is unregistered\nfrom a <a href=\"#!/api/Ext.data.TreeStore\" rel=\"Ext.data.TreeStore\" class=\"docClass\">TreeStore</a>.</p>\n      <div class='rounded-box template-box'>\n      <p>This is a <a href=\"#!/guide/components\">template method</a>.\n         a hook into the functionality of this class.\n         Feel free to override it in child classes.</p>\n      </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>treeStore</span> : <a href=\"#!/api/Ext.data.TreeStore\" rel=\"Ext.data.TreeStore\" class=\"docClass\">Ext.data.TreeStore</a><div class='sub-desc'><p>The TreeStore from which the node is being unregistered.</p>\n</div></li></ul></div></div></div><div id='method-remove' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-method-remove' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-method-remove' class='name expandable'>remove</a>( <span class='pre'>[erase]</span> ) : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a><span class=\"signature\"><span class='chainable' >chainable</span></span></div><div class='description'><div class='short'>Removes this node from its parent. ...</div><div class='long'><p>Removes this node from its parent.</p>\n\n<p><strong>If</strong> the node is not phantom (only added in the client side), then it may be marked for removal.</p>\n\n<p>If the owning <a href=\"#!/api/Ext.data.TreeStore\" rel=\"Ext.data.TreeStore\" class=\"docClass\">tree store</a> is set to <a href=\"#!/api/Ext.data.ProxyStore-cfg-trackRemoved\" rel=\"Ext.data.ProxyStore-cfg-trackRemoved\" class=\"docClass\">track removed</a>\nthen the node will be added to the stack of nodes due to be removed the next time the store is synced with the server.</p>\n\n<p>If the owning <a href=\"#!/api/Ext.data.TreeStore\" rel=\"Ext.data.TreeStore\" class=\"docClass\">tree store</a> is set to <a href=\"#!/api/Ext.data.ProxyStore-cfg-autoSync\" rel=\"Ext.data.ProxyStore-cfg-autoSync\" class=\"docClass\">auto synchronize</a>\nthen the synchronize request will be initiated immediately.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>erase</span> : Boolean (optional)<div class='sub-desc'><p>True to erase the node using the configured proxy. This is only needed when the\nowning <a href=\"#!/api/Ext.data.TreeStore\" rel=\"Ext.data.TreeStore\" class=\"docClass\">tree store</a> is not taking care of synchronization operations.</p>\n<p>Defaults to: <code>false</code></p></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-removeAll' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-method-removeAll' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-method-removeAll' class='name expandable'>removeAll</a>( <span class='pre'>[erase]</span> ) : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a><span class=\"signature\"><span class='chainable' >chainable</span></span></div><div class='description'><div class='short'>Removes all child nodes from this node. ...</div><div class='long'><p>Removes all child nodes from this node.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>erase</span> : Boolean (optional)<div class='sub-desc'><p>True to erase the node using the configured\nproxy.</p>\n<p>Defaults to: <code>false</code></p></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-removeChild' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-method-removeChild' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-method-removeChild' class='name expandable'>removeChild</a>( <span class='pre'>node, [erase]</span> ) : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Removes a child node from this node. ...</div><div class='long'><p>Removes a child node from this node.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>node</span> : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a><div class='sub-desc'><p>The node to remove</p>\n</div></li><li><span class='pre'>erase</span> : Boolean (optional)<div class='sub-desc'><p>True to erase the record using the\nconfigured proxy.</p>\n<p>Defaults to: <code>false</code></p></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a></span><div class='sub-desc'><p>The removed node</p>\n</div></li></ul></div></div></div><div id='method-replaceChild' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-method-replaceChild' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-method-replaceChild' class='name expandable'>replaceChild</a>( <span class='pre'>newChild, oldChild</span> ) : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a><span class=\"signature\"></span></div><div class='description'><div class='short'>Replaces one child node in this node with another. ...</div><div class='long'><p>Replaces one child node in this node with another.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>newChild</span> : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a><div class='sub-desc'><p>The replacement node</p>\n</div></li><li><span class='pre'>oldChild</span> : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a><div class='sub-desc'><p>The node to replace</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a></span><div class='sub-desc'><p>The replaced node</p>\n</div></li></ul></div></div></div><div id='method-serialize' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-method-serialize' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-method-serialize' class='name expandable'>serialize</a>( <span class='pre'>writerParam</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Creates an object representation of this node including its children. ...</div><div class='long'><p>Creates an object representation of this node including its children.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>writerParam</span> : Object<div class='sub-desc'></div></li></ul></div></div></div><div id='method-setCollapsed' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-method-setCollapsed' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-method-setCollapsed' class='name expandable'>setCollapsed</a>( <span class='pre'>recursive</span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>Sets the node into the collapsed state without affecting the UI. ...</div><div class='long'><p>Sets the node into the collapsed state without affecting the UI.</p>\n\n<p>This is called when a node is collapsed with the recursive flag. All the descendant\nnodes will have been removed from the store, but descendant non-leaf nodes still\nneed to be set to the collapsed state without affecting the UI.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>recursive</span> : Object<div class='sub-desc'></div></li></ul></div></div></div><div id='method-setConfig' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-method-setConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-setConfig' class='name expandable'>setConfig</a>( <span class='pre'>name, [value]</span> ) : <a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a><span class=\"signature\"><span class='chainable' >chainable</span></span></div><div class='description'><div class='short'>Sets a single/multiple configuration options. ...</div><div class='long'><p>Sets a single/multiple configuration options.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String/Object<div class='sub-desc'><p>The name of the property to set, or a set of key value pairs to set.</p>\n</div></li><li><span class='pre'>value</span> : Object (optional)<div class='sub-desc'><p>The value to set for the name parameter.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a></span><div class='sub-desc'><p>this</p>\n\n\n\n</div></li></ul></div></div></div><div id='method-setFirstChild' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-method-setFirstChild' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-method-setFirstChild' class='name expandable'>setFirstChild</a>( <span class='pre'>node</span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>Sets the first child of this node ...</div><div class='long'><p>Sets the first child of this node</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>node</span> : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-setLastChild' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-method-setLastChild' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-method-setLastChild' class='name expandable'>setLastChild</a>( <span class='pre'>node</span> )<span class=\"signature\"><span class='private' >private</span></span></div><div class='description'><div class='short'>Sets the last child of this node ...</div><div class='long'><p>Sets the last child of this node</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>node</span> : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-sort' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-method-sort' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-method-sort' class='name expandable'>sort</a>( <span class='pre'>[sortFn], [recursive], [suppressEvent]</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Sorts this nodes children using the supplied sort function. ...</div><div class='long'><p>Sorts this nodes children using the supplied sort function.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>sortFn</span> : Function (optional)<div class='sub-desc'><p>A function which, when passed two Nodes, returns -1, 0 or 1 depending upon required sort order.</p>\n\n<p>It omitted, the node is sorted according to the existing sorters in the owning <a href=\"#!/api/Ext.data.TreeStore\" rel=\"Ext.data.TreeStore\" class=\"docClass\">TreeStore</a>.</p>\n</div></li><li><span class='pre'>recursive</span> : Boolean (optional)<div class='sub-desc'><p>True to apply this sort recursively</p>\n<p>Defaults to: <code>false</code></p></div></li><li><span class='pre'>suppressEvent</span> : Boolean (optional)<div class='sub-desc'><p>True to not fire a sort event.</p>\n<p>Defaults to: <code>false</code></p></div></li></ul></div></div></div><div id='method-statics' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-method-statics' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-statics' class='name expandable'>statics</a>( <span class='pre'></span> ) : <a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a><span class=\"signature\"><span class='protected' >protected</span></span></div><div class='description'><div class='short'>Get the reference to the class from which this object was instantiated. ...</div><div class='long'><p>Get the reference to the class from which this object was instantiated. Note that unlike <a href=\"#!/api/Ext.Base-property-self\" rel=\"Ext.Base-property-self\" class=\"docClass\">self</a>,\n<code>this.statics()</code> is scope-independent and it always returns the class from which it was called, regardless of what\n<code>this</code> points to during run-time</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        totalCreated: 0,\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        var statics = this.statics();\n\n        alert(statics.speciesName);     // always equals to 'Cat' no matter what 'this' refers to\n                                        // equivalent to: My.Cat.speciesName\n\n        alert(this.self.speciesName);   // dependent on 'this'\n\n        statics.totalCreated++;\n    },\n\n    clone: function() {\n        var cloned = new this.self();   // dependent on 'this'\n\n        cloned.groupName = this.statics().speciesName;   // equivalent to: My.Cat.speciesName\n\n        return cloned;\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n\n    statics: {\n        speciesName: 'Snow Leopard'     // My.SnowLeopard.speciesName = 'Snow Leopard'\n    },\n\n    constructor: function() {\n        this.callParent();\n    }\n});\n\nvar cat = new My.Cat();                 // alerts 'Cat', then alerts 'Cat'\n\nvar snowLeopard = new My.SnowLeopard(); // alerts 'Cat', then alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));         // alerts 'My.SnowLeopard'\nalert(clone.groupName);                 // alerts 'Cat'\n\nalert(My.Cat.totalCreated);             // alerts 3\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-unlink' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-method-unlink' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-unlink' class='name expandable'>unlink</a>( <span class='pre'>names</span> ) : <a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a><span class=\"signature\"><span class='chainable' >chainable</span><span class='private' >private</span></span></div><div class='description'><div class='short'>Destroys a given set of linked objects. ...</div><div class='long'><p>Destroys a given set of <code><a href=\"#!/api/Ext.Base-method-link\" rel=\"Ext.Base-method-link\" class=\"docClass\">linked</a></code> objects. This is only needed if\nthe linked object is being destroyed before this instance.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>names</span> : String[]<div class='sub-desc'><p>The names of the linked objects to destroy.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='method-updateInfo' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-method-updateInfo' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-method-updateInfo' class='name expandable'>updateInfo</a>( <span class='pre'>commit, info</span> ) : String<span class=\"signature\"><span class='protected' >protected</span></span></div><div class='description'><div class='short'>Updates general data of this node like isFirst, isLast, depth. ...</div><div class='long'><p>Updates general data of this node like isFirst, isLast, depth. This\nmethod is internally called after a node is moved. This shouldn't\nhave to be called by the developer unless they are creating custom\nTree plugins.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>commit</span> : Boolean<div class='sub-desc'>\n</div></li><li><span class='pre'>info</span> : Object<div class='sub-desc'><p>The info to update. May contain any of the following</p>\n<ul><li><span class='pre'>isFirst</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>isLast</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>index</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>depth</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>parentId</span> : Object<div class='sub-desc'>\n</div></li></ul></div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>[]} The names of any persistent fields that were modified.</p>\n</div></li></ul></div></div></div></div><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Static methods</h3><div id='static-method-addConfig' class='member first-child inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-static-method-addConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-addConfig' class='name expandable'>addConfig</a>( <span class='pre'>config, [mixinClass]</span> )<span class=\"signature\"><span class='private' >private</span><span class='static' >static</span></span></div><div class='description'><div class='short'>Adds new config properties to this class. ...</div><div class='long'><p>Adds new config properties to this class. This is called for classes when they\nare declared, then for any mixins that class may define and finally for any\noverrides defined that target the class.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>mixinClass</span> : <a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a> (optional)<div class='sub-desc'><p>The mixin class if the configs are from a mixin.</p>\n</div></li></ul></div></div></div><div id='static-method-addInheritableStatics' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-static-method-addInheritableStatics' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-addInheritableStatics' class='name expandable'>addInheritableStatics</a>( <span class='pre'>members</span> )<span class=\"signature\"><span class='private' >private</span><span class='static' >static</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>members</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='static-method-addMember' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-static-method-addMember' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-addMember' class='name expandable'>addMember</a>( <span class='pre'>name, member</span> )<span class=\"signature\"><span class='chainable' >chainable</span><span class='private' >private</span><span class='static' >static</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>member</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='static-method-addMembers' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-static-method-addMembers' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-addMembers' class='name expandable'>addMembers</a>( <span class='pre'>members, [isStatic], [privacy]</span> )<span class=\"signature\"><span class='chainable' >chainable</span><span class='static' >static</span></span></div><div class='description'><div class='short'>Add methods / properties to the prototype of this class. ...</div><div class='long'><p>Add methods / properties to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Cat', {\n    constructor: function() {\n        ...\n    }\n});\n\n My.awesome.Cat.addMembers({\n     meow: function() {\n        alert('Meowww...');\n     }\n });\n\n var kitty = new My.awesome.Cat();\n kitty.meow();\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>members</span> : Object<div class='sub-desc'><p>The members to add to this class.</p>\n</div></li><li><span class='pre'>isStatic</span> : Boolean (optional)<div class='sub-desc'><p>Pass <code>true</code> if the members are static.</p>\n<p>Defaults to: <code>false</code></p></div></li><li><span class='pre'>privacy</span> : Boolean (optional)<div class='sub-desc'><p>Pass <code>true</code> if the members are private. This\nonly has meaning in debug mode and only for methods.</p>\n<p>Defaults to: <code>false</code></p></div></li></ul></div></div></div><div id='static-method-addStatics' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-static-method-addStatics' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-addStatics' class='name expandable'>addStatics</a>( <span class='pre'>members</span> ) : <a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a><span class=\"signature\"><span class='chainable' >chainable</span><span class='static' >static</span></span></div><div class='description'><div class='short'>Add / override static properties of this class. ...</div><div class='long'><p>Add / override static properties of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.addStatics({\n    someProperty: 'someValue',      // My.cool.Class.someProperty = 'someValue'\n    method1: function() { ... },    // My.cool.Class.method1 = function() { ... };\n    method2: function() { ... }     // My.cool.Class.method2 = function() { ... };\n});\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>members</span> : Object<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='static-method-borrow' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-static-method-borrow' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-borrow' class='name expandable'>borrow</a>( <span class='pre'>fromClass, members</span> ) : <a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a><span class=\"signature\"><span class='private' >private</span><span class='static' >static</span></span></div><div class='description'><div class='short'>Borrow another class' members to the prototype of this class. ...</div><div class='long'><p>Borrow another class' members to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Bank', {\n    money: '$$$',\n    printMoney: function() {\n        alert('$$$$$$$');\n    }\n});\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Thief', {\n    ...\n});\n\nThief.borrow(Bank, ['money', 'printMoney']);\n\nvar steve = new Thief();\n\nalert(steve.money); // alerts '$$$'\nsteve.printMoney(); // alerts '$$$$$$$'\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fromClass</span> : <a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a><div class='sub-desc'><p>The class to borrow members from</p>\n</div></li><li><span class='pre'>members</span> : Array/String<div class='sub-desc'><p>The names of the members to borrow</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='static-method-callParent' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-static-method-callParent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-callParent' class='name expandable'>callParent</a>( <span class='pre'>args</span> )<span class=\"signature\"><span class='protected' >protected</span><span class='static' >static</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>args</span> : Object<div class='sub-desc'></div></li></ul></div></div></div><div id='static-method-callSuper' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-static-method-callSuper' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-callSuper' class='name expandable'>callSuper</a>( <span class='pre'>args</span> )<span class=\"signature\"><span class='protected' >protected</span><span class='static' >static</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>args</span> : Object<div class='sub-desc'></div></li></ul></div></div></div><div id='static-method-create' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-static-method-create' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-create' class='name expandable'>create</a>( <span class='pre'></span> ) : Object<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>Create a new instance of this Class. ...</div><div class='long'><p>Create a new instance of this Class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.create({\n    someConfig: true\n});\n</code></pre>\n\n<p>All parameters are passed to the constructor of the class.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>the created instance.</p>\n</div></li></ul></div></div></div><div id='static-method-createAlias' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-static-method-createAlias' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-createAlias' class='name expandable'>createAlias</a>( <span class='pre'>alias, origin</span> )<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>Create aliases for existing prototype methods. ...</div><div class='long'><p>Create aliases for existing prototype methods. Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    method1: function() { ... },\n    method2: function() { ... }\n});\n\nvar test = new My.cool.Class();\n\nMy.cool.Class.createAlias({\n    method3: 'method1',\n    method4: 'method2'\n});\n\ntest.method3(); // test.method1()\n\nMy.cool.Class.createAlias('method5', 'method3');\n\ntest.method5(); // test.method3() -&gt; test.method1()\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>alias</span> : String/Object<div class='sub-desc'><p>The new method name, or an object to set multiple aliases. See\n<a href=\"#!/api/Ext.Function-method-flexSetter\" rel=\"Ext.Function-method-flexSetter\" class=\"docClass\">flexSetter</a></p>\n</div></li><li><span class='pre'>origin</span> : String/Object<div class='sub-desc'><p>The original method name</p>\n</div></li></ul></div></div></div><div id='static-method-decorate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-static-method-decorate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-static-method-decorate' class='name expandable'>decorate</a>( <span class='pre'>model</span> )<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>This method allows you to decorate a Model's class to implement the NodeInterface. ...</div><div class='long'><p>This method allows you to decorate a Model's class to implement the NodeInterface.\nThis adds a set of methods, new events, new properties and new fields on every Record.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>model</span> : <a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>/<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a><div class='sub-desc'><p>The Model class or an instance of the Model class you want to\ndecorate the prototype of.</p>\n</div></li></ul></div></div></div><div id='static-method-extend' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-static-method-extend' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-extend' class='name expandable'>extend</a>( <span class='pre'>config</span> )<span class=\"signature\"><span class='private' >private</span><span class='static' >static</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='static-method-getConfigurator' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-static-method-getConfigurator' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-getConfigurator' class='name expandable'>getConfigurator</a>( <span class='pre'></span> ) : <a href=\"#!/api/Ext.Configurator\" rel=\"Ext.Configurator\" class=\"docClass\">Ext.Configurator</a><span class=\"signature\"><span class='private' >private</span><span class='static' >static</span></span></div><div class='description'><div class='short'>Returns the Ext.Configurator for this class. ...</div><div class='long'><p>Returns the <code><a href=\"#!/api/Ext.Configurator\" rel=\"Ext.Configurator\" class=\"docClass\">Ext.Configurator</a></code> for this class.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Configurator\" rel=\"Ext.Configurator\" class=\"docClass\">Ext.Configurator</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='static-method-getName' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-static-method-getName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-getName' class='name expandable'>getName</a>( <span class='pre'></span> ) : String<span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>Get the current class' name in string format. ...</div><div class='long'><p>Get the current class' name in string format.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    constructor: function() {\n        alert(this.self.getName()); // alerts 'My.cool.Class'\n    }\n});\n\nMy.cool.Class.getName(); // 'My.cool.Class'\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>className</p>\n</div></li></ul></div></div></div><div id='static-method-getPrototypeBody' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-static-method-getPrototypeBody' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-static-method-getPrototypeBody' class='name expandable'>getPrototypeBody</a>( <span class='pre'></span> )<span class=\"signature\"><span class='private' >private</span><span class='static' >static</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='static-method-mixin' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-static-method-mixin' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-mixin' class='name expandable'>mixin</a>( <span class='pre'>name, mixinClass</span> )<span class=\"signature\"><span class='private' >private</span><span class='static' >static</span></span></div><div class='description'><div class='short'>Used internally by the mixins pre-processor ...</div><div class='long'><p>Used internally by the mixins pre-processor</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : Object<div class='sub-desc'></div></li><li><span class='pre'>mixinClass</span> : Object<div class='sub-desc'></div></li></ul></div></div></div><div id='static-method-onExtended' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-static-method-onExtended' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-onExtended' class='name expandable'>onExtended</a>( <span class='pre'>fn, scope</span> )<span class=\"signature\"><span class='chainable' >chainable</span><span class='private' >private</span><span class='static' >static</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fn</span> : Object<div class='sub-desc'></div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'></div></li></ul></div></div></div><div id='static-method-override' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-static-method-override' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-override' class='name expandable'>override</a>( <span class='pre'>members</span> ) : <a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a><span class=\"signature\"><span class='static' >static</span></span></div><div class='description'><div class='short'>Override members of this class. ...</div><div class='long'><p>Override members of this class. Overridden methods can be invoked via\n<a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a>.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n\n<p>Direct use of this method should be rare. Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>\ninstead:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.CatOverride', {\n    override: 'My.Cat',\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n</code></pre>\n\n<p>The above accomplishes the same result but can be managed by the <a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>\nwhich can properly order the override and its target class and the build process\ncan determine whether the override is needed based on the required state of the\ntarget class (My.Cat).</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>members</span> : Object<div class='sub-desc'><p>The properties to add to this class. This should be\nspecified as an object literal containing one or more properties.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a></span><div class='sub-desc'><p>this class</p>\n</div></li></ul></div></div></div><div id='static-method-triggerExtended' class='member  inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><a href='#!/api/Ext.Base' rel='Ext.Base' class='defined-in docClass'>Ext.Base</a><br/><a href='source/Base3.html#Ext-Base-static-method-triggerExtended' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-triggerExtended' class='name expandable'>triggerExtended</a>( <span class='pre'></span> )<span class=\"signature\"><span class='private' >private</span><span class='static' >static</span></span></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-event'>Events</h3><div class='subsection'><div id='event-append' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-event-append' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-event-append' class='name expandable'>append</a>( <span class='pre'>this, node, index, eOpts</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Fires when a new child node is appended ...</div><div class='long'><p>Fires when a new child node is appended</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>this</span> : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a><div class='sub-desc'><p>This node</p>\n\n\n\n</div></li><li><span class='pre'>node</span> : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a><div class='sub-desc'><p>The newly appended node</p>\n\n\n\n</div></li><li><span class='pre'>index</span> : Number<div class='sub-desc'><p>The index of the newly appended node</p>\n\n\n\n</div></li><li><span class='pre'>eOpts</span> : Object<div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-beforeappend' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-event-beforeappend' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-event-beforeappend' class='name expandable'>beforeappend</a>( <span class='pre'>this, node, eOpts</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Fires before a new child is appended, return false to cancel the append. ...</div><div class='long'><p>Fires before a new child is appended, return false to cancel the append.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>this</span> : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a><div class='sub-desc'><p>This node</p>\n\n\n\n</div></li><li><span class='pre'>node</span> : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a><div class='sub-desc'><p>The child node to be appended</p>\n\n\n\n</div></li><li><span class='pre'>eOpts</span> : Object<div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-beforecollapse' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-event-beforecollapse' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-event-beforecollapse' class='name expandable'>beforecollapse</a>( <span class='pre'>this, eOpts</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Fires before this node is collapsed. ...</div><div class='long'><p>Fires before this node is collapsed.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>this</span> : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a><div class='sub-desc'><p>The collapsing node</p>\n\n\n\n</div></li><li><span class='pre'>eOpts</span> : Object<div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-beforeexpand' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-event-beforeexpand' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-event-beforeexpand' class='name expandable'>beforeexpand</a>( <span class='pre'>this, eOpts</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Fires before this node is expanded. ...</div><div class='long'><p>Fires before this node is expanded.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>this</span> : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a><div class='sub-desc'><p>The expanding node</p>\n\n\n\n</div></li><li><span class='pre'>eOpts</span> : Object<div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-beforeinsert' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-event-beforeinsert' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-event-beforeinsert' class='name expandable'>beforeinsert</a>( <span class='pre'>this, node, refNode, eOpts</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Fires before a new child is inserted, return false to cancel the insert. ...</div><div class='long'><p>Fires before a new child is inserted, return false to cancel the insert.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>this</span> : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a><div class='sub-desc'><p>This node</p>\n\n\n\n</div></li><li><span class='pre'>node</span> : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a><div class='sub-desc'><p>The child node to be inserted</p>\n\n\n\n</div></li><li><span class='pre'>refNode</span> : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a><div class='sub-desc'><p>The child node the node is being inserted before</p>\n\n\n\n</div></li><li><span class='pre'>eOpts</span> : Object<div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-beforemove' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-event-beforemove' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-event-beforemove' class='name expandable'>beforemove</a>( <span class='pre'>this, oldParent, newParent, index, eOpts</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Fires before this node is moved to a new location in the tree. ...</div><div class='long'><p>Fires before this node is moved to a new location in the tree. Return false to cancel the move.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>this</span> : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a><div class='sub-desc'><p>This node</p>\n\n\n\n</div></li><li><span class='pre'>oldParent</span> : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a><div class='sub-desc'><p>The parent of this node</p>\n\n\n\n</div></li><li><span class='pre'>newParent</span> : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a><div class='sub-desc'><p>The new parent this node is moving to</p>\n\n\n\n</div></li><li><span class='pre'>index</span> : Number<div class='sub-desc'><p>The index it is being moved to</p>\n\n\n\n</div></li><li><span class='pre'>eOpts</span> : Object<div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-beforeremove' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-event-beforeremove' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-event-beforeremove' class='name expandable'>beforeremove</a>( <span class='pre'>this, node, isMove, eOpts</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Fires before a child is removed, return false to cancel the remove. ...</div><div class='long'><p>Fires before a child is removed, return false to cancel the remove.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>this</span> : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a><div class='sub-desc'><p>This node</p>\n\n\n\n</div></li><li><span class='pre'>node</span> : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a><div class='sub-desc'><p>The child node to be removed</p>\n\n\n\n</div></li><li><span class='pre'>isMove</span> : Boolean<div class='sub-desc'><p><code>true</code> if the child node is being removed so it can be moved to another position in the tree.\n(a side effect of calling <a href=\"#!/api/Ext.data.NodeInterface-method-appendChild\" rel=\"Ext.data.NodeInterface-method-appendChild\" class=\"docClass\">appendChild</a> or\n<a href=\"#!/api/Ext.data.NodeInterface-method-insertBefore\" rel=\"Ext.data.NodeInterface-method-insertBefore\" class=\"docClass\">insertBefore</a> with a node that already has a parentNode)</p>\n\n\n\n</div></li><li><span class='pre'>eOpts</span> : Object<div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-collapse' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-event-collapse' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-event-collapse' class='name expandable'>collapse</a>( <span class='pre'>this, eOpts</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Fires when this node is collapsed. ...</div><div class='long'><p>Fires when this node is collapsed.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>this</span> : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a><div class='sub-desc'><p>The collapsing node</p>\n\n\n\n</div></li><li><span class='pre'>eOpts</span> : Object<div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-expand' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-event-expand' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-event-expand' class='name expandable'>expand</a>( <span class='pre'>this, eOpts</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Fires when this node is expanded. ...</div><div class='long'><p>Fires when this node is expanded.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>this</span> : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a><div class='sub-desc'><p>The expanding node</p>\n\n\n\n</div></li><li><span class='pre'>eOpts</span> : Object<div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-insert' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-event-insert' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-event-insert' class='name expandable'>insert</a>( <span class='pre'>this, node, refNode, eOpts</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Fires when a new child node is inserted. ...</div><div class='long'><p>Fires when a new child node is inserted.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>this</span> : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a><div class='sub-desc'><p>This node</p>\n\n\n\n</div></li><li><span class='pre'>node</span> : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a><div class='sub-desc'><p>The child node inserted</p>\n\n\n\n</div></li><li><span class='pre'>refNode</span> : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a><div class='sub-desc'><p>The child node the node was inserted before</p>\n\n\n\n</div></li><li><span class='pre'>eOpts</span> : Object<div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-move' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-event-move' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-event-move' class='name expandable'>move</a>( <span class='pre'>this, oldParent, newParent, index, eOpts</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Fires when this node is moved to a new location in the tree ...</div><div class='long'><p>Fires when this node is moved to a new location in the tree</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>this</span> : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a><div class='sub-desc'><p>This node</p>\n\n\n\n</div></li><li><span class='pre'>oldParent</span> : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a><div class='sub-desc'><p>The old parent of this node</p>\n\n\n\n</div></li><li><span class='pre'>newParent</span> : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a><div class='sub-desc'><p>The new parent of this node</p>\n\n\n\n</div></li><li><span class='pre'>index</span> : Number<div class='sub-desc'><p>The index it was moved to</p>\n\n\n\n</div></li><li><span class='pre'>eOpts</span> : Object<div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-remove' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-event-remove' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-event-remove' class='name expandable'>remove</a>( <span class='pre'>this, node, isMove, context, eOpts</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Fires when a child node is removed ...</div><div class='long'><p>Fires when a child node is removed</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>this</span> : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a><div class='sub-desc'><p>This node</p>\n\n\n\n</div></li><li><span class='pre'>node</span> : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a><div class='sub-desc'><p>The removed node</p>\n\n\n\n</div></li><li><span class='pre'>isMove</span> : Boolean<div class='sub-desc'><p><code>true</code> if the child node is being removed so it can be moved to another position in the tree.</p>\n\n\n\n</div></li><li><span class='pre'>context</span> : Object<div class='sub-desc'><p>An object providing information about where the removed node came from. It contains the following properties:</p>\n\n\n\n<ul><li><span class='pre'>parentNode</span> : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a><div class='sub-desc'><p>The node from which the removed node was removed.</p>\n\n\n\n</div></li><li><span class='pre'>previousSibling</span> : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a><div class='sub-desc'><p>The removed node's former previous sibling.</p>\n\n\n\n</div></li><li><span class='pre'>nextSibling</span> : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a><div class='sub-desc'><p>The removed node's former next sibling.\n(a side effect of calling <a href=\"#!/api/Ext.data.NodeInterface-method-appendChild\" rel=\"Ext.data.NodeInterface-method-appendChild\" class=\"docClass\">appendChild</a> or\n<a href=\"#!/api/Ext.data.NodeInterface-method-insertBefore\" rel=\"Ext.data.NodeInterface-method-insertBefore\" class=\"docClass\">insertBefore</a> with a node that already has a parentNode)</p>\n\n\n\n</div></li></ul></div></li><li><span class='pre'>eOpts</span> : Object<div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div><div id='event-sort' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.data.NodeInterface'>Ext.data.NodeInterface</span><br/><a href='source/NodeInterface.html#Ext-data-NodeInterface-event-sort' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.data.NodeInterface-event-sort' class='name expandable'>sort</a>( <span class='pre'>this, childNodes, eOpts</span> )<span class=\"signature\"></span></div><div class='description'><div class='short'>Fires when this node's childNodes are sorted. ...</div><div class='long'><p>Fires when this node's childNodes are sorted.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>this</span> : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a><div class='sub-desc'><p>This node.</p>\n\n</div></li><li><span class='pre'>childNodes</span> : <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>[]<div class='sub-desc'><p>The childNodes of this node.</p>\n\n</div></li><li><span class='pre'>eOpts</span> : Object<div class='sub-desc'><p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});