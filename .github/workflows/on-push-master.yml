name: Run coveralls and publish to gh-pages

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout sources
      uses: actions/checkout@v2

    - name: Use Node.js 18.x
      uses: actions/setup-node@v1
      with:
        node-version: 18.x

    - name: Install needed Java version
      uses: actions/setup-java@v1
      with:
        java-version: '8'

    - name: Install ruby
      uses: actions/setup-ruby@v1
      with:
        ruby-version: '2.6'

    - name: Install jsduck
      run: gem install jsduck

    - name: Cache Node.js modules üíæ
      uses: actions/cache@v2
      with:
        path: |
          node_modules
        key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-node-
          ${{ runner.OS }}-

    - name: Cache ext üíæ
      uses: actions/cache@v2
      with:
        path: |
          resources/external
          ext-6.2.0
          ext-6.2.0-gpl.zip
          sencha-cmd-download
          sencha-cmd
        key: ${{ runner.OS }}-node-${{ hashFiles('resources/external/ext-all.js') }}
        restore-keys: |
          ${{ runner.OS }}-node-
          ${{ runner.OS }}-

    - name: Download ExtJS, install sencha cmd, create sencha workspace
      run: |
        if (test ! -f ext-6.2.0-gpl.zip); then wget -q http://cdn.sencha.com/ext/gpl/ext-6.2.0-gpl.zip -O ext-6.2.0-gpl.zip; fi
        if (test ! -d ext-6.2.0); then unzip -qo ext-6.2.0-gpl.zip; fi
        mkdir -p sencha-cmd-download
        if (test ! -f sencha-cmd-download/SenchaCmd-6.2.1-linux-amd64.sh.zip); then wget -q http://cdn.sencha.com/cmd/6.2.1/no-jre/SenchaCmd-6.2.1-linux-amd64.sh.zip -O sencha-cmd-download/SenchaCmd-6.2.1-linux-amd64.sh.zip; fi
        if (test ! -f sencha-cmd-download/SenchaCmd-6.2.1.29-linux-amd64.sh); then unzip -q -d sencha-cmd-download sencha-cmd-download/SenchaCmd-6.2.1-linux-amd64.sh.zip; fi
        mkdir -p sencha-cmd
        if (test ! -f sencha-cmd/sencha); then ./sencha-cmd-download/SenchaCmd-6.2.1.29-linux-amd64.sh -q -dir "$PWD/sencha-cmd"; fi
        mkdir -p sencha-workspace
        ./sencha-cmd/sencha -sdk ext-6.2.0 generate workspace /tmp/sencha-workspace
        mkdir -p /tmp/sencha-workspace/packages/geoext3

    - name: Install dependencies ‚è¨
      run: npm install

    - name: Testing üîé
      run: npm test

    - name: Generate coverage üß™
      run: npm run test:coverage

    - name: Publish to coveralls ‚≠ê
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - name: Build dreaded sencha package
      run: |
        SENCHACMD="$PWD/sencha-cmd/sencha"
        COPY_RESOURCES=".sencha resources sass src package.json build.xml classic LICENSE"
        rm -rf /tmp/sencha-workspace/packages/geoext3/*
        for COPY_RESOURCE in $COPY_RESOURCES; do cp -r $PWD/$COPY_RESOURCE /tmp/sencha-workspace/packages/geoext3/; done
        cd /tmp/sencha-workspace/packages/geoext3/
        sed -i 's|"@geoext/geoext"|"GeoExt"|' package.json
        $SENCHACMD package build
        ls build/*js

    - name: Cleanup and prepare pages
      run: |
        rm -rf master
        mkdir -p master/docs
        mkdir -p master/docs-w-ext
        cp -r examples master/
        cp -r resources master/
        cp -r src master/
        cp -r classic master/
        cp -r node_modules/@geoext/openlayers-legacy master/resources/
        find master/examples -type f -name "*.html" -exec sed -i 's|../../node_modules/@geoext/openlayers-legacy|../../resources/openlayers-legacy|g' {} +
        cp /tmp/sencha-workspace/packages/geoext3/build/*js master/
        npm run generate:docs:master
        npm run generate:docs-w-ext:master

    - name: Deploy gh-pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./master
        destination_dir: ./master

    - name: Deploy gh-pages to geoext3 path
      uses: peaceiris/actions-gh-pages@v3
      with:
        deploy_key: ${{ secrets.GEOEXT_GITHUB_IO_DEPLOY_KEY }}
        external_repository: geoext/geoext.github.io
        publish_dir: ./master
        destination_dir: ./geoext3/master/
